 
 1 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Раздел 8. Алгоритмический язык QPILE  
8.1 Общие положения  ................................ ................................ ....................  2 
8.2 Работа с  таблицами QPILE  ................................ ................................ .........  4 
8.3 Структура файла программы  ................................ ................................ ..... 9 
8.4 Конструкции языка QPILE  ................................ ................................ ........  13 
8.5 Общие функции  ................................ ................................ ......................  23 
8.6 Математические функции  ................................ ................................ ........  24 
8.7 Функции для работы с  коллекциями объектов ( COLLECTION ) .....................  27 
8.8 Функции для работы с  ассоциативными массивами ( MAP) ..........................  29 
8.9 Функции для обращения к строкам произвольных таблиц QUIK ..................  30 
8.10  Функции для обращения к спискам доступных параметров  ........................  54 
8.11  Функции для работы с  программируемой таблицей  ................................ .... 56 
8.12  Функции для получения значений Таблицы текущих торгов  .......................  59 
8.13  Функции для получения значений Окна котировок  ................................ .... 67 
8.14  Функции для получения значений таблицы «Позиции по инструментам»  .... 67 
8.15  Функции для получения значений таблицы «Позиции по деньгам»  .............  70 
8.16  Функции расчета маржинальных позиций  ................................ .................  71 
8.17  Функции пол учения значений таблиц «Клиентский портфель» 
и «Купить/Продать»  ................................ ................................ .......................  73 
8.18  Функции для работы с  файлами  ................................ ...............................  81 
8.19  Функции для работы со  строками  ................................ .............................  83 
8.20  Функции для работы с  графиками  ................................ ............................  84 
8.21  Функции для работы с  заявками  ................................ ...............................  87 
8.22  Функции для работы с  метками  ................................ ................................  89 
8.23  Сервисные функции  ................................ ................................ ................  92 
8.24  Отладка программ QPILE  ................................ ................................ ..........  95 
ПРИЛОЖЕНИЕ 1. Синтаксис команд языка QPILE  ................................ ..............  97 
ПРИЛОЖЕНИЕ 2. Рекомендации к составлению программ на QPILE  ....................  99 
Раздел описывает применение алгоритмического языка QPILE, встроенного  в Рабочее место 
системы QUIK . В начале раздела рассматривается базовый функционал клиентского места, 

 
 2 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 предназначенный для ра боты с программируемыми таблицами. Для пользователей, 
заинтер есованных  в разработке собственных программ  в документации приводится описание 
констру кций языка QPILE  и встроенных функций языка,  а также пример реализации  – расчет 
показат елей маржинального кре дитования  по методике Ф СФР. 
 
8.1 Общие положения  
8.1.1  Назначение  
Язык QPILE  (QUIK Programmable Interface and Logic Environment)  представляет собой набор 
команд, интерп ретируемых рабочим местом QUIK.  
Областью применения QPILE является создание новых таблиц для расче та в режиме 
реальн ого времени собственных показателей на осно ве информации  из других таблиц.  
Данный функционал удобен, прежде всего, для брокера, так как у каждого брокера 
существует своя собственная стратегия расчета показателей клиентской позиции. 
Примен ение встроенного языка позволяет реализовать практически любой алгоритм.  
Примеры использования QPILE:  
1. Динамический пересчет стоимости активов кли ентов на рабочем месте брокера.  
2. Динамический пересчет стоимости активов  в портфеле кли ента и его суммарной 
стоимости.  
3. Вычисление показателей, отсутствующих  в системе QUIK либо торговой системе биржи, 
на основе собственных алгоритмов.  
4. Расчет параметров маржинального кредитования  в соотве тствии  с принятыми 
нормат ивами.  
5. Программирование торговой стратегии, генерирующе й сигналы на изменение позиций  
по инструментам.  
Основной областью применения языка QPILE является расчет стоимости 
портфелей ценных бумаг, поэтому  в терминологии  описания типов таблиц 
часто испол ьзуется определение «Портфели».  
 
8.1.2  Как работает QPILE  
1. Структура  таблицы (назначение столбцов, строк,  и формулы для вычисления параме тров) 
описывается  в виде программы на языке QPILE. Для вычисления  в формулах мо жно 
использовать стандартные математические  и логические операции, использовать 
переменные  и массивы данных,  запрашивать информацию  из других таблиц системы QUIK.  
2. Код программы может быть получен  с сервера QUIK ( серверный ) или загружен  с диска 
на компьютере пользователя ( локальный ). Полученный код обрабатывается 
интерпр етатором языка QPILE на рабочем месте QUIK,  который производит пересчет 

 
 3 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 значений  в формулах  с заданной периодичностью. Таким образом,  формируется 
внутренний и сточник данных для отображения полученных значений  в таблицах. 
Несколько таблиц на  основе одной  и той же  программы используют общий источник 
данных, при этом вычи сления  не будут дублироваться  и снижать производительность 
системы.  
3. На основе программы можно создавать таблицы, обладающие стандартными функци ями 
при раб оте с таблицами  в системе QUIK.  
4. Рабочее место QUIK  имеет встроенный отладчик кода  программ на QPILE, позволя ющий 
вести пошаговую отладку  и контролировать текущие значения переменных. По дробнее 
см. п. 8.24. 
Нумерация строк в таблицах QPILE  начинается с единицы,  а нумерация  
символов в строках языка QPILE  начинается с нуля . 
 
8.1.3  Основные возможности  
Основные функции языка QPILE:  
1. Описание новых таблиц произвольной структуры,  
2. Вычисление полей таблиц на основе математических формул  и логических выражений,  
3. Выделение ячеек таблицы цветом  в зависимости о т значений какого -либо показателя,  
4. Уведомление пользователя звуковым сигналом  и текстовыми сообщениями.  
Таблица на языке QPILE поддерживает основные дейст вия с таблицами  в системе QUIK:  
• Редактирование,  в том числе выбор параметров для отображения  и настрой ку 
их очередности,  
• Управление «горячими клавишами»,  
• Размещение на «экранных вкладках », 
• Поиск значения  в ячейках таблицы,  
• Печать таблиц ы с предварительным просмотром,  
• Копирование данных  в Буфер Обмена Windows ( Clipboard ), 
• Экспорт данных  в Excel,  
• Экспорт дан ных по ODBC.  
В качестве исходных данных  для расчетов параметров таблиц может использоваться 
инфо рмация  из следующих типов та блиц QUIK,  а также  из графиков:
№ Таблица  
1 Таблица текущих торгов  
2 Таблица обезличенных  сделок  
3 Таблица заявок  
4 Таблица стоп -заявок  № Таблица  
5 Таблица сделок  
6 Позиции по инструментам  
7 Позиции по деньгам  
8 Позиции  по клиентским счетам  

 
 4 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Таблица  
9 Ограничения  по клиентским счетам  
10 Таблица заявок на внебиржевые сделки  
11 Таблица сделок для исполнения  
12 Таблица заявок -отчетов на сделки Р ПС 
13 Таблица «Клиентский портфель»  № Таблица  
14 Таблица «Купить/Продать»  
15 Позиции участника по деньгам  
16 Позиции участника по  инструментам  
17 Позиции участника по  торговым  счетам  
18 Таблица, создаваемая при расчете 
программы  
 
8.1.4  Функциональные ограничения  
Текущая версия языка QPILE  и созданные на его основе таблицы  не поддерживают 
следующих операций:  
• Сортировку  в таблицах;  
• Применение фильтров;  
• Использование таблицы  в качестве источника  данных для построения графиков;  
• Сохранение данных  из таблицы  в текстов ый файл через контекстное меню;  
• Экспорт данных  в системы технического анализа.  
8.2 Работа  с таблицами QPILE  
8.2.1  Загрузка программы  
Этот этап добавляет описания собственных таблиц  в список доступных типов. Если  
предпол агается работа  с описаниями таблиц на сервере, его  можно пропустить.  
Загрузка кода программы выполняется выбором пункта меню программы Сервисы / QPILE  
скрипты …, или нажатие клавиш «Ctrl»+«F1 1». 
1. Нажмите кнопку « Добавить » и выберите файл, загружаемый  с диска. Файлы имеют 
стандартные расширения «.QPL». Назван ие таблицы появится  в списке «Досту пные 
скрипты ». 
2. При чтении файла осуществляется проверка правильности программы. Если программа 
содержит ошибки, система уведомит об этом  в «Окне сообщений» . В сообщении 
указывается имя файла  и номер строки,  в которой обна ружена ошибка.  
3. Если файл прочитан успешно, то  в полях отобраз ятся соответствующие параметры:  
Поле  Назначение  
Текущий скрипт  Название таблицы  
Всего параме тров Число параметров (столбцов), описанных  в структуре таблицы  

 
 5 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Поле  Назначение  
Всего клиентов  Количество доступных кодов клиентов,  из числа перечисленных  
в структуре табл ицы. 
В новой версии языка параметр  не актуален  
Фирмы  Перечень идентификаторов фирмы  в торговой системе (значения, 
соответству ющие полю «Дилер»  в Таблице заявок или Таблице сделок)  
Клиенты  Перечень ид ентификаторов клиентов для отображения  в таблице  
Параметры скрипта  Перечень описанных параметров  и расширенные сведения  по ним 
Формула расчета  Исходный код программы на языке QPILE  
 
4. Для загрузки прочитанной  из файла таблицы нажми те кнопку «Загрузить лок ально».  
5. Кнопка «Загрузить на сервер» позволяет загрузить программу на сервер, которая станет 
доступна всем его пользователям. Право загрузки программ на сервер назначается 
администратором системы QUIK.  
 
При локальной загрузке код исполняется на текущем ра бочем месте  и просмотр таблицы 
на его основе доступен тоже только на этом месте.  
Первую загрузку каждого нового описания настоятельно рекоменд уется 
производить локально,  а уже после просмотра  и проверки корректности 
его работы  и расчета параметров – загруж ать на сервер.  

 
 6 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
8.2.2  Настройка параметров программы  
Этот этап определяет список обрабатываемых программ  и определяет периодичность 
вычислений. Если программы были загружены локально, то они автоматически помечаются 
выбра нными.  
Выбор доступных программ  с описани ями типов таблиц выполняется выбором пункта меню 
программы Сервисы /QPILE  скрипты …, или нажатием клавиш «Ctrl»+«F11».  
 
1. В списке «Доступные скрипты » приведены все программы, доступные пользователю для 
создания таблиц, как загруженные локально, так  и серверн ые. Выберите программу  
из числа доступных, установив на ней флажок . В полях диалога отобразятся параме тры, 
относящиеся к стр уктуре программируемой таблицы.  
2. Установите период расчета значений таблицы. Для исполнения программ  с большим 
количеством вычислений  период расчета значений рекомендуется устанавливать  
не менее 5 -10 секунд.  
3. Нажмите кнопку «Сохр анить  как…» для сохранения настроек.  
4. Нажатие кнопки «Удалить» приводит к удалению  из списка выбранной строки. 
Серве рные типы таблиц удалить нельзя.  
5. Нажатием кноп ки «Формула» открывается окно  с исходным кодом программы  
и описанием таблицы (справочно).  
6. Нажатие кнопки « Создать таблицу » открывается окно «Создать таблицу для просмотра 
параметров скрипта» (см. п. 8.2.3). 
7. Чтобы закр ыть окно  с сохранением настроек, нажмите кнопку «Применить». Нажатие 
кнопки «Отмена» закрывает  окно без сохранения изменений.  
Настройки данного этапа распространяются  и на ранее созданные 
программируемые таблицы. Этот этап можно  использовать для включ ения/  

 
 7 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 отклю чения вычислений  в таблицах,  а также для регулирования частоты 
обновления да нных в них. 
 
Применение настроек к существующим таблицам:  
• Как отключи ть пересчет значений  в таблице?  
— Выберите пункт контекстного меню «Приостановить расчет» либо нажмите 
«Ctrl»+ «F11»  и снимите флажок  с требуемого типа таблицы. При этом  в таблице 
будут отображены последние вычисленные значения.  
— Если по одной программе было сформировано несколько таблиц, то расчет 
приостановится во всех этих таблицах.  
— Для отключения пересчета в о всех таблицах нужно нажать «Ctrl»+«F11»  и снять 
все флажк и. 
• Как изменить период расчета  в существующей таблице?  
— Выберите пункт контекстного меню «Параметры скрипта » или нажмите 
«Ctrl»+«F11», затем измените значение параметра «Период расчета (сек)»  
и нажм ите кнопку «Прим енить».  
8.2.3  Создание таблицы  
Этот этап формирует таблицу на основании программы. На базе одной программы можно 
создать несколько таблиц для удобства  их расположения на экране.  
Создание программируемой таблицы выполняется нажатием кнопки «Создат ь таблицу» в 
окне «Работа со скриптами» (см. п. 8.2.2). 
 
1. Выберите программу  в списке «Доступные скрипты ». В полях раздела «Текущий скрипт » 
отобразят ся данные  по структуре таблицы.  

 
 8 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 2. Если необходимо, ограничьте количест во отображаемых строк  в таблице  с помощью 
фильтра «Фильтр клиентов».  
3. Сформируйте список столбцов таблицы  из числа доступных параметров  
и последов ательность  их отображения  в таблице . В поле «Описание параметра» 
справочно прив одится расширенное описание выде ленного пар аметра.  
4. Нажати ем кнопки «Да» создается таблица.  
Полученная таблица имеет такие же функции управления, как  и другие 
таблицы системы QUIK. Например, для редактирования таблицы можно 
нажать кнопку 
  на панели инструментов, или клавиши «Ctrl»+«E».  
Расчет параметров таблицы ведется,  в том числе на основе Та блицы текущих 
торгов . Убедитесь, что необходимые для расчета параметров данные 
принимаются  с сервера (не отключены фильтром  в списке прин имаемых 
параметров  и инструментов ). 
 
8.2.4  Функции, доступные  в таблице  
Данные таблицы доступны для копирования, экспорта  в Excel, экспорта через ODBC.  
Функции, доступные  из контекстного меню таблицы:  
• «Приостановить расчет» – остановить вычисление параметров таблицы (при этом  
в таблице отображаютс я последние вычисленные данные);  
• «Возобновить расчет» – возобновляет вычисление параметров таблицы , если он был 
остановлен;  
• «Начать расчет заново» – сбросить все з начения  и начать расчет заново;  
• «Начать расчет  в режиме отладки » – сбрасывает все значения, запускает окно отладки  
и начинает расчет заново ; 
• «Сохранить описание  в файл» – сохранить  в текстовый файл програ мму, описывающую 
данную таблицу;  
• «Посмотреть формулу» – показать  в окне код программы данной таблицы;  
• «Параметры скрипта » – открыть окно  с параметрами программы,  в том ч исле период 
расчета  в секундах.  
Описание стандартных функций контекстного меню  для таблиц см. п. 2.8.4 Раздела 2 
«Основные принципы работы  с программой ». 
Описание  применения пользовательских фильтров и  условного форматирования  таблиц 
приведено соответствен но в п п. 2.8.8 и 2.8.9 Раздела 2 «Основные принципы работы  с 
программой ». 
Полный список управляющих клавиш для всех типов таблиц приведен в Приложении 
к Разделу 2. 
ПРИМЕР : Локальная загрузка файла программы  с расчетом показателей маржинального 
кредитования  по методике ФСФР.  

 
 9 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Пример находится  в одном архиве  с этим Руководством  пользов ателя,  в папке «qpile».  
Перед загрузкой файла, приведенного  в примере, измените код участн ика 
торгов  в строках 4  и 60 на код фирмы Вашего брокера.  
 
1. Нажатием клавиш «Ctrl»+«F1 1» открывается окно,  в котором выбираем требуемый файл 
на диске (в примере это fkcb.qpl)  и нажимаем кнопку «Открыть».  
2. Нажимаем кнопку «Загрузить локально» . В окне сообщений появляется уведомление 
о прочтении файла. Нажимаем кнопку «Выход».  
3. Следующий этап пропу скаем, потому что загруженные локально описания таблиц 
автоматически отмечаются доступными для создания таблиц.  
4. Нажатием кнопки  «Создать таблицу » открывается окно создания таблицы. Формируем 
список «Заголовки столбцов» выбором параметров  из числа доступных . 
5. Нажатием кно пки «Да» создается таблица,  в строках которой перечислены доступные 
счета клиентов,  со следующими параметрами  в столбцах:  
Название поля  Значение  
Задолженность брокеру  Сумма задолженности клиента брокеру  по деньгам  и инструментам , 
в денежном  выражении  
Только деньги клиента  Сумма всех текущих остатков клиента  по деньгам  
Оценка  Сумма всех текущих положительных остатков клиента  по инструментам , 
в денежном выр ажении  
Средства  в рублях  Доступные собственные средства клиента  
Все средства  Текущая стоимость средств клиента, сумма параметров «Оценка»  
и «Средства  в рублях»  
Уровень маржи  Текущий уровень маржи, рассчитанный  по методике ФСФР  
Состояние  Текстовый комментарий, поясняющий значение уровня маржи  
 
В ячейках таблицы появятся данные, пересчиты ваемые  с заданной регулярностью.  
Если данные  в таблице отсутствуют, то, скорее всего,  в коде программы указаны 
недоступные идентификатор фирмы, коды инструментов или коды клиентов.  
При необходимости можно изменить периодичность расчета или сократить список  кодов 
клиентов  с помощью фильтра, выбрав пункт контекстного меню «Параметры скрипта » или 
нажав «Ctrl»+«F11».  
8.3 Структура файла программы  
Файл  с кодом программы представляет собой текстовый файл  в кодировке CP -1251 
(Windows). Один файл служит для описания од ного типа таблицы. Используются 
стандартные расширения имени файлов «.QPL».  

 
 10 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Описание состоит  из трех частей:  
1. «Заголовок» – наименование таблицы  и определение основных параметров,  
2. «Тело программы» – собственно код программы,  
3. «Описание столбцов  таблицы» – определение названий столбцов  и формата 
соотве тствующих им ячеек таблицы,  
Все разделы являются обязательными  и должны следовать строго друг за другом. Файл 
всегда начинается  с заголовка  и заканчивается строкой «END_PORTFOLIO» (в новой версии 
языка должно при меняться «END_PORTFOLIO_EX»).  
Примеры файлов см . В папке QPILE, которая поставляется вместе  с Руководством 
пользоват еля. 
8.3.1  Заголовок файла  
Заголовок файла содер жит основные параметры таблицы:  
Параметр  Назначение  
PORTFOLIO  
PORTFOLIO_EX  Название таблицы – символьный идентификатор латинскими буквами без пробелов.  
«PORTFOLIO» – параметр, применявшийся  в первой версии языка, «PORTFOLIO_EX» 
– обозн ачение программы на расширенной версии языка (начиная  с версии QUIK 
4.09)  
DESCRIPTION  Текстовое описание таблицы  
*CLIENTS_LIST  Список кодов клиентов через запятую, для которых вычисляются значения  
в таблице.  
Значение «ALL_CLIENTS» соответствует выбору всех кодов клиентов.  
Значения  по каждому счету клиента формируют новую строку таблицы  
FIRMS_LIST  Список идентификаторов  фирм (участников торгов) через запятую, клиентам 
которых будет  досту пна данная таблица  
 
* – параметр предыдущей версии языка,  в текущей версии является необязательным.  
 
Каждый параметр должен быть описан на отдельной строке  и заканчиваться символом «;».  
Пример  заголовка : 
PORTFOLIO AVAILABLE_MONEY;  
DESCRIPTION Доступные  деньги клиента; 
CLIENTS_LIST ALL_CLIENTS;  
FIRMS_LIST MC0012300000;  
 

 
 11 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Данная таблица будет отображаться  в списке доступных  с именем «AVAILABLE_MONEY». 
При выборе доступных описаний таблиц  в поле «Текущий скрипт » отобразится «Доступные 
деньги клиента». Это же наименование будет являться заголовком таблицы, принимаемым  
по умолчанию. Расчет параметров осуществляется  по всем счетам клиентов, доступных 
пользов ателю в таблицах позиций  и имеющих код фирмы «MC0012300000».  
8.3.2  Тело программы  
Раздел содержит код программы для расчета значений  в ячейках таблицы. Начало раздела 
обозначается строкой «PROGRAM», окончание  – строкой «END_PROGRAM».  Для выход а 
из тела программы используется оператор « RETURN ». 
1. Регист р символов (верхний или нижний)  в командах  по умолчанию 
игнорируется интерпретатором. Все строковые константы переводятся 
автоматически  в верхний регистр. Но  в случае необходимости можно 
отменить автоматический перевод символов  в верхний регистр. Для этого  
необходимо между заголовком  и телом програм мы добавить следующую 
строку:  
 
USE_CASE_SENSITIVE _CONSTANTS  
 
При добавлении указанного ключа значения строковых переменных  не будут 
переводит ься в верхний регистр,  а будут оставаться такими, какие они есть.  
2. Множе ственные пробелы игнорируются интерпретатором, за исключением 
пробелов внутри строковых переменных.  
3. Для переноса длинных строк используется комбинация «<проб ел>_»  
в конце строки. Например:  
 
CLIENTS_LIST 0001, 0002, 0003, 0004, 0005, 0006, 0007, 0008, 0009,  0010, _ 
0011, 0012, 0013, 0014, 0015;  
 
4. Символ «’» является комментарием. Комментарий распространяется  
до конца стр оки. 
5. Разделителем операторов служит перевод строки, т.е. каждый оператор 
описывае тся отдельной строкой.  
6. Нумерация символов в строке начинаетс я с нуля.  
 

 
 12 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Пример программы:  
PROGRAM 
 FirmCode  = "MC0012300000 " 
 CurrentBalance  = MONEY_CURRENT_BALANCE(ROWNAME, FirmCode, "EQTV", "SUR")  
 CurrentLimit  = MONEY_CURRENT_LIMIT(ROWNAME, FirmCode, "EQTV", "SUR")  
 Locked = MONEY_LIMIT_LOCKED(ROWNAME, Fir mCode, "EQTV", "SUR")  
 AvailableMoney  = MoneyCurrentBalance + MoneyCurrentLimit – MoneyLocked  
 If AvailableMoney > 0  
 Status = "Заявки доступны " 
 Else 
 Status = "Заявки недоступны " 
 SET_ROW_COLOR(ROWNAME, "RGB(255,138,138)", "D EFAULT_COLOR")  
 End If 
END_PROGRAM 
 
Пример относится к формированию таблицы «Доступные деньги клиента». Создаваемая 
таблица будет частично дублировать поля таблицы «Позиции по деньгам» , а также 
содержать два вычисляемых поля.  
8.3.3  Определение столбцов таблицы  
Для отображения  в таблице вычисленны х значений необходимо описать ее столбцы  
и формат соответствующих им ячеек таблицы. Для этого предназначен  данный раздел 
файла.  
Каждый столбец таблицы описываетс я следующим набором параметров:  
Параметр  Назначение  
PARAMETER  Название переменной  в программе  (максимальная длина 31  символ) , 
значение кот орой будет отображаться  в данном столбце  
PARAMETER_TITLE  Название столбца  (максимальная длина 3 1 символ) , отображаемое  
в таблице  
PARAMETER_DESCRIPTION  Расширенное описание параметра  (максимальная длина 12 7 символов)  
PARAMETER_TYPE  Формат данных  в ячейках таблицы, относящихся к столбцу. Возможны два 
типа да нных: 
 NUMERIC(<размер_числа_в_символах>, 
<кол_во_знаков_после_запятой>)  – двойные  с плавающей 
точкой (double),  
 STRING (<длина_строки>)  – строковые (string)  
 

 
 13 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Описание каждого парам етра завершается строкой «END».  
После описания параметров  в конце файла обязательно должна быть строка «END_PORTFOLIO»  
для первой версии языка, либо «END_PORTFOLIO_EX» для ег о новой версии.  
Пример  описания : 
PARAMETER AvailableMoney;  
PARAMETER_TITLE Доступно;  
PARAMETER _DESCRIPTION  Доступные деньги клиента;  
PARAMETER _TYPE NUMERIC(10,2); 
END 
 
Значения переменной «AvailableMoney» будут отображаться  в столбце таблицы «Доступно». 
При настройке таблицы  в поле «Описание параметра» отображается текст «Доступные 
деньги кл иента».  Данные  в столбце будут отображаться  в виде числа  с двумя знаками после 
запятой. Этот же формат данных рекомендуется указывать при настройке экспорта  
из таблицы  по ODBC.  
8.3.4  Подключение дополнительных файлов  
Для подключения доп олнительных файлов  с функциями к программе используется раздел 
INCLUDE. Данный раздел размещается между заголовком  и телом программы  и описывается 
следующим образом:  
INCLUDE  file1, file2, …, fileN; 
где file1, file2,  …, fileN – относительные или полные пути  файлов  с описанием 
функций (прописываются через запятую).  
Пример  описания : 
INCLUDE C:/Program Files/ADDITION/object _1, C:/Program Files/ADDITION/object _2; 
 
8.4 Конструкции языка QPILE  
8.4.1  Типы данных  
1. Различаются  следующие типы данных:  
— «STRING»  – строковый,  
«Сумм арный спрос»  

 
 14 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
— «DOUBLE»  – вещественный , или число  с плавающей точкой . Точность – 15 
десятичных разрядов , но не более 8 знаков после запятой . 
1234567.89  
 
— «COLLECTION»  – коллекция,  
— Коллекция  является списком объектов,  с индексацией  по целочисленному 
ключу ( начиная  с 0). 
0 1 2 3 
«HYDR » 12 7.89
0 «BUY»  
 
— «MAP»  – ассоциативный массив,  
— Ассоциативный массив (MAP)  является последовательностью пар (ключ, 
значение), которая обеспечивает получение значения  по ключу. Каждому ключу 
соотве тствует максимум одно значение,  иными словами, каждый ключ  
в ассоциативном массиве уникален . В качестве ключа всегда выступает 
строковое значение.  
«NUMBER»  «TIME»  «OPERATIO
N» 
67890  «12:34:56
» «BUY»  
 
2. Типы д анных « COLLECTION » и «MAP» являются структурными. Они могут:  
— Быть неоднородными,  т.е. содержать значения разных типов,  
— Содержать  в качестве значений элементы любых типов,  в том числе  
и переменные типов «COLLECTION»  и «MAP».  
3. Область видимости всех переменных, кроме формальных параметров, является 
глобальной  и определяется контекстом ис полнения. Если  в процессе исполнения 
переме нная была присвоена, то она считается определенной  до конца исполнения 
программы.  
Переменные, сохраняющие свои значения между периодами расчета программы, 
именуются глобальными . Глобальные переменные описываются с пециальной 
функцией «NEW_GLOBAL ()»  (см. п. 8.5.1 ). 
4. Количество используемых  в программе переменных ограничено 1000 . 

 
 15 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.4.2  Приведение типов  
1. Переменные языка  не типизированы  и могут изменять тип данных  в процессе исполн ения 
програм мы. 
2. Применение операций «+», « -», «*», «/» к строковым переменным приводит  их к 
вещес твенным значениям. Если такое приведение  не возможно, то вещественное 
значение принимается равным «0.0». Для структурных переменных результат этих 
опера ций не определен.  
3. Операция сравнения вещественных  и строковых переменных допустима только для 
переменных  со значениями одного типа. Для переменных структурных типов 
«COLLE CTION»  и «MAP» результат сравнения  не определен.  
4. Применение операции конкатенации строк «&» к вещественн ым переменным пр иводит  
их значения к строковым.  
5. При вызове внешних функций всегда осуществляется приведение типов аргументов.  
6. Изменение значений  переменных структурных типов  и обращение к  их полям 
выполн яется специальными функциями,  описанными  в п. 8.7–8.8. 
8.4.3  Выражения  
1. Приоритет выполнения математических операций («+», « -», «*», «/», унарный « -») 
является стандартным.  
2. Логические  операции имеют о динаковый приоритет (за исключением «AND»  и «OR»)  
и исполняются слева направо. «AND»  и «OR» исполняются  в последнюю очередь, сл ева 
направо.  Например:  
A < B or A = C равносильно  (A < B) or (A = C)  
 
3. В выражениях  и сравнениях возможно использование скобок.  
Допустимые выражения:  
Операция  Значение  
Математические  
+ Сложение  
- Вычитание  
* Умножение  
/ Деление  
Унарный « -» Смена знака  в значении на противоположный  
D или E  Экспоненциальная форма записи числа, «3D2» равносильно 3*10^2  
Логические  
== Равенство  

 
 16 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Операция  Значение  
= Равенство, аналогично предыдущему  
> Больше  
< Меньше  
>= Больше или равно  
<= Меньше или равно  
!= Не равно  
<> Не равно, аналогично предыдущему  
AND Логическое «И»  
OR Логическое «ИЛИ»  
Текстовые  
& Склейка (конкатенация) строк  
 
При присвоении значени я переменной необходимо использовать прив едение 
типов данных. Например, выражение A=«3E2»+0 даст результат 300,  
в отличие от А=«5E3», которым переменной будет присвоено строковое 
выражение «5E3 ». 
 
8.4.4  Условия  
Синтаксис оператора условия:  
IF условие 
 последоват ельность инструкций  
ELSE 
 последовательность инструкций  
END IF 
 
«Условием» является логическое выражение. Вложенность операторов условия  
не ограничена . В операторе « END IF» допускается только один пробел.  
Пример:  
IF DealerMoney  = 0 
 Margin = 100  
ELSE  

 
 17 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  Margin=0 
END IF 
 
8.4.5  Циклы  
Синтаксис оператора цикла:  
1. выполняет  «последовательность инструкций» для каждого значения «переменной», 
входящего  в «список значений». «Список значений» определяется переменной типа 
«STRING»  со значениями , перечисленными через запятую.  
FOR переменная IN список значений  
 последовательность инструкций  
END FOR 
 
2. выполняет последовательность  инструкций для каждого значения переменной  
в диапазоне от «значение1»  до «значение2»  с шагом 1,  в качестве которых могут 
выступать м атематические выражен ия. Если «значение2» < «значение1», цикл  
не обрабатывается.  
FOR переменная FROM значение1 TO значение2  
 последовательность инструкций  
END FOR 
 
Вложенность операторов цикла  не ограничена . В операторе « END FOR» допускается только 
один пробел.  
Пример:  
FkcbSecsList = "HYDR,SBER,MSNG,LKOH,YUKO,RTKM" 
 
FOR Sec IN FkcbSecsList  
 DCPos = DEPO_CURRENT_BALANCE(ROWNAME, FirmList, Sec, DefDepoAcc)  
 DCLim = DEPO_CURRENT_LIMIT(ROWNAME, FirmList, Sec, DefDepoAcc)  
 DOLim = DEPO_OPEN_LIMIT(ROWNAME, FirmList, Sec, DefDepoAcc)  
 SecPos = DCPos + DCLim  – DOLim 
 SecPos = SecPos * GET_PARAM(ClassCode, Sec, "LAST") * GET_PARAM(ClassCode, Sec, 
"LOTSIZE")  
 DepoPos = DepoPos + ignore_negative(SecPos)  
 DealerMoney = DealerMoney + dealer(SecPos)  
END FOR 
 

 
 18 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Данный цикл перебирает все инструменты  из списка инструментов «FkcbSecsList»  и 
по каждому инструменту  обрабатывает позицию  по этому инструменту  для текущего 
рассчитываемого клиента.  
Для прерывания цикла  до его окончания служит оператор « BREAK ». Он прерывае т 
выполнение оператора « FOR» и передает управление  следующему за ним оператору.  
Для передачи управлени я на следующую итерацию оператора «FOR» служит оператор 
«CONTINUE ». В операторе « FOR» следующая итерация начинается вычислени ем выражения 
цикла оператора «FOR». После вычисления условного выражения  в зависимости от  его 
результатов происходит либо прекращение выполнения оператора либо выполнение его 
тела. 
8.4.6  Функции  
Общие положения:  
1. Описания функций могут находиться  в любом месте программы.  
2. Все функции должны и меть различные имена – перегрузка  по типу параметров  
и их количеству  не осуществляется.  
3. Функции могут возвращать значение  с помощь ю переменной  с именем «RESULT».  
4. Все параметры передаются  в функции  по значению.  
5. Функция может являться процедурой . В этом случ ае в месте вызова такой функции  
не используется возвращаемое значение,  и присваивание переменной  с именем 
«RESULT» внутри такой функции  не обязательно.  
6. Для выхода  из тела ф ункции может использоваться оператор « RETURN ». 
1. В описании синтаксиса функций, возвра щающих или принимающих 
переменную любого типа, для обозначения применяется тип «ANY».  
2. Таблица , создаваемая при расчете программы, обозначается «OWN».  
 
Функции, определенные пользователем, имеют следующий синтаксис:  
FUNC функция (список аргументов)  
 последовательность инструкций  
END FUNC 
 
В операторе « END FUNC » допускается только один пробел.  
Пример : 
FUNC ignore_negative(x)  
 If x > 0  
 RESULT = x  

 
 19 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  Else 
 RESULT = 0  
 End If 
END FUNC  
 
8.4.7  Функции  языка  QPILE  
Стандартные функции языка QPILE предназначены для работы  со структурными типами 
переменных  и получения значений  из таблиц QUIK.  
Функция  Назначение  
NEW_GLOBAL  Инициализация глобальной переменной  
MESSAGE  Вывод текста  в Окне сообщений  
Математические функции  
ABS Модуль  
ACOS  Арккосинус  
ASIN Арксинус  
ATAN  Арктангенс  
CEIL Округление вверх  
COS Косинус  
EXP Экспонент  
FLOOR  Округление вниз  
LOG Логарифм  
POW Возведение  в степень  
RAND  Случайное число  
RANDOMIZE  Генерация случайных чисел  
SIN Синус  
SQRT  Квадратный корен ь числа  
TAN Тангенс  
Функции для работы  с коллекциями объектов  
CREATE_COLLECTION  Определение коллекции  
GET_COLLECTION_COUNT  Количество элементов  в коллекции  

 
 20 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Функция  Назначение  
REMOVE_COLLECTION_ITEM  Удаление элеме нта коллекции  
INSERT_COLLECTION_ITEM  Вставка элемента коллекции  
SET_COLLECTION_ITEM  Замена значения элемента коллекции  
GET_COLLECTION_ITEM  Чтение значения элемента коллекции  
Функции для работы  с ассоциативными массивами  
CREATE_MAP  Определение массива  
SET_VALUE  Добавление нового элемента  в массив  
GET_VALUE  Чтение значения элемента  из массива  
Функции для обращения к строкам произвольных т аблиц QUIK  
GET_ITEM  Строка  с указанным номером  из таблицы QUIK  
GET_NUMBER_OF  Количество записей  в указанной таблице QUIK  
Функции для обращения к спискам доступных параметров  
GET_CLASSES_LIST  Список кодов класс ов, доступных  в текущем сеансе связи  
GET_CLASS_SECURITIES  Список кодов инструментов для заданного списка классов  
GET_SECURITY_INFO  Информация  по инструменту с определенным кодом  
из заданного класса  
Функции для работы  с программируемой таблицей  
ADD_ITEM  Добавление новой строки  в таблицу  
MODIFY_ITEM  Изменение указанной строки таблицы  
DELETE_ITEM  Удаление указанной строки таблицы  
DELETE_ALL_ITEMS  Очистка всех значений таблицы  
SET_ROW_COLOR  Указа ние цвета подсветки для строки таблицы  
SET_ROW_COLOR_EX  Указание цвета фона и шрифта для строки таблицы  
Функции для получения значений Таблицы текущих торгов  
GET_PARAM * Получение значений  из Таблицы текущих торгов  
GET_PARAM_EX  Получение всех значений  из Таблицы текущих торгов  
Функции для получения значений Окна котировок  
GET_QUOTES_II_LEVEL_DATA  Получение значений из Таблицы котировок  

 
 21 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Функция  Назначение  
*Функции для получения значений таблицы «Позиции по инструментам»  
DEPO_OPEN_BALANCE  Входящий остаток  по инструментам  
DEPO_OPEN_LIMIT  Входящий лимит  по инструментам  
DEPO_CURRENT_BALANCE  Текущий остаток  по инструментам  
DEPO_C URRENT_LIMIT  Текущий лимит  по инструментам  
DEPO_LIMIT_AVAILABLE  Доступное количество инструментов  
DEPO_LIMIT_LOCKED  Заблокированное Количество лотов инструментов  
DEPO_LIMIT_LOCKED_BUY  Количество лотов инструментов , заблокированных на 
покупку  
DEPO_LIMIT _LOCKED_BUY_VALUE  Стоимость инструментов , заблокированных на покупку  
*Функции для получения значений таблицы «Позиции по деньгам»  
MONEY_OPEN_BALANCE  Входящий остаток  по денежным средствам  
MONEY_O PEN_LIMIT  Входящий лимит  по денежным средствам  
MONEY_CURRENT_BALANCE  Текущий остаток  по денежным средствам  
MONEY_CURRENT_LIMIT  Текущий лимит  по денежным средствам  
MONEY_LIMIT_AVAILABLE  Доступное количество денежных средств  
MONEY_LIMIT_LOCKED  Заблокиров анное  в заявках на покупку количество 
денежных средств  
Функции расчета маржинальных позиций  
SHORT_VALUE  Стоимость всех коротких значений  
LONG_VALUE  Стоимость всех длинных позиций  
Функции получения значений таблиц «Клиентский портфель»  и «Купить/Продать»  
GET_CLIENT_MARGINAL_PORTFOLIO_INFO  Значения параметров таблицы «Клиентский портфель»  
GET_CLIENT_MARGINAL_BUY_SELL_INFO  Значение парамет ров таблицы «Купить/Продать»  
Функции для работы  с файлами  
CLEAR_FILE  Очистить файл  
WRITE  Записать строку  в конец файла  
WRITELN  Записать строку  с переводом строки  в конец файла  
GET_FILE_LEN  Количество строк  в файле 

 
 22 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Функция  Назначение  
READ_LINE  Прочитать  из файла строку  с заданным номером  
Функции для работы  со строками  
LEN Количество символов  в строке  
TRIM Отсечение пробелов  в конце строки  
SUBSTR  Подстрока  
FIND Поиск  в строке позиции по дстроки  
Функции для работы  с графиками  
GET_CANDLE  Значения цен  и объемов (OHLCV) «свечи» на графике  
и ее индикаторов  
GET_CANDLE_EX  Значения цен и  объемов (OHLCV) «свечи» на графике 
и ее индикаторов, с остоящих из нескольких линий  
Функции для работы  с заявками  
SEND_TRANSACTION  Ввод новой заявки  
Функции для работы  с метками  
ADD_LABEL  Добавить метку  
DELETE _LABEL  Удалить метку  
DELETE_ALL_LABELS  Удалить все метки  
GET_LABEL _PARAMS  Получить параметры метки  
SET_LABEL _PARAMS  Задать параметры метки  
Сервисные функции  
GET_TRADE_DATE  Дата текущей торговой сессии  
GET_DATETIME  Текущие дата  и время  
APPLY_SCALE  Округление  с заданной точностью  
IS_CONNECTED  Определяет состояние подключения клиентского места к 
серверу  
GET_INFO_PARAM  Позволяет получить параметры для информационного окна 
(пункт меню Система /О 
программе /Информационное окно ) 
BREAKP OINT Позволяет прервать выполнение программы и вызвать окно 
«Отладка»  
 

 
 23 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 * – функции предыдущей версии языка QPILE, сохраненные для совместимости. Значения, 
возвращаемые этими фун кциями, также могут быть получены чтением строки таблицы функцией 
«GET_ITEM»  и выборкой  из нее значения фун кцией «GET_VALUE» . 
 
Функции предыдущих версий, поддержка которых прекращена:  
• MONEY_LIMIT_LOCKED_NONMARGINAL_VALUE  
8.5 Общие функции  
8.5.1  NEW_GLOBAL  
Функция предназначена для инициализации глобальной переменной. Глобальная 
переменная сох раняет свое значение между итерациями вычислений значений таблицы. 
Инициализация может быть выполнена переменной любого типа, при этом создается 
глобальная переменная соответствующего типа.  
NEW_GLOBAL (STRING Name, ANY InitValue)  
Параметры:  
№ Параметр  Тип Описание  
1 NAME  STRING  Строковое имя создаваемой переменной  
2 INITVALUE  ANY Значение для инициализации глобальной переменной  
 
В качестве первого параметра может фигурировать строковая константа, либо же 
переменная, имеющая строковое значение . В последне м случае создается глобальная 
переменная  с тем же именем, что  и значение этой строковой переменной.  
Пример : 
‘ 
NEW_GLOBAL( "GLOBAL","MyFirstGlobal ") 
NEW_GLOBAL(Global,1) 
‘ 
 
После выполнения этих двух строк будут созданы две глобальные переменные. Строковая 
переменная  с именем «GLOBAL»  и значением «MyFirstGlobal»,  а также вещественная 
переменная  с именем «MyFirstGlobal»  и значением 1.  

 
 24 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.5.2  MESSAGE  
Открывает Окн о сообщений  с заданным текстом.  
MESSAGE (STRING Text, DOUBLE Msg_type)  
Параметры:  
№ Параметр  Тип Описание  
1 TEXT STRING  Текст сообщения  
2 MSG_TYPE  DOUBLE  Тип сообщения, определяющий вид иконки  в Окне и звуковой 
сигнал. Во зможные значения:  
 1 – «Информация»;  
 2 – «Внимание»;  
 3 – «Ошибка»  
 
Пример:  
‘ 
MESSAGE ( "Hello!",1) 
‘ 
 
8.6 Математические функции  
8.6.1  ABS 
Возвращает модуль числа . 
DOUBLE  ABS (DOUBLE Value ) 
8.6.2  ACOS  
Возвращает значение арккосинуса аргумента.  
DOUBLE  ACOS (DOUBLE Value)  
8.6.3  ASIN  
Возвращает значение арксинуса аргумента.  
DOUBLE  ASIN (DOUBLE Value)  

 
 25 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.6.4  ATAN  
Возвращает значение арктангенса аргумента.  
DOUBLE  ATAN (DOUBLE Value)  
8.6.5  CEIL  
Возвращает ближайшее целое число, большее или равное аргумент у. 
DOUBLE  CEIL (DOUBLE Value)  
8.6.6  COS 
Возвращает значение косинуса аргумента.  
DOUBLE  COS (DOUBLE Value)  
8.6.7  EXP 
Вычисление экспонента от аргумента.  
DOUBLE  EXP (DOUBLE Value)  
8.6.8  FLOOR  
Возвращает ближайшее целое число, меньшее аргумента.  
DOUBLE  FLOOR (DOUBLE Value)  
8.6.9  LOG 
Вычисление натурального логарифма от аргумента . 
DOUBLE  LOG (DOUBLE Value)  
8.6.10  POW  
Возведение аргумента  в степень.  
DOUBLE  POW (DOUBLE Value, DOUBLE Power)  
8.6.11  RAND  
Возвращает случайное целочи сленное значение  в диапазоне от 0  до 32767.  
DOUBLE  RAND ()  

 
 26 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.6.12  RANDOMIZE  
Генерация случайных чисел.  
DOUBLE  RANDO MIZE ()  
Функция инициализирует генератор случайных чисел для определения случайной 
последов ательности генерируемых чисел. Функцию RANDO MIZE () необх одимо вызвать  
до того, как будет  использоваться функция RAND().  
8.6.13  SIN 
Возвращает значение синуса аргумента.  
DOUBLE  SIN (DOUBLE Value)  
8.6.14  SQRT  
Возвращает значение квадратного корня аргумента.  
DOUBLE  SQRT (DOUBLE Value)  
8.6.15  TAN 
Возвращает значение тангенса аргумента.  
DOUBLE  TAN (DOUBLE Value)  
Пример:  
' 
MESSAGE ("ACOS 0.5  – " & acos(0.5),1)  
MESSAGE ("ASIN 0.5  – " & asin(0.5),1)  
MESSAGE ("ATAN 2  – " & atan(2),1)  
MESSAGE ("CEIL 2.2  – " & ceil(2.2),1)  
MESSAGE ("COS 0.5  – " &cos(0.5),1)  
MESSAGE ("EXP 2  – " &exp(2),1)  
MESSAGE ("FLOOR 4.5  – " &floor(4.5),1)  
MESSAGE ("LOG 0.5  – " &log(0.5),1)  
MESSAGE ("POW 2,3  – " &pow(2,3),1)  
MESSAGE ("RAND  – " &rand(),1)  
MESSAGE ("SIN 0.5  – " &sin(0.5),1)  
MESSAGE ("SQRT 2  – " &sqrt(2),1)  
MESSAGE ("TAN 0.5  – " &tan(0.5),1)  
' 
 

 
 27 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 При выполнении п римера на экране будет появляться Окно сообщений  с отображением 
функции  и результата в ычисления ее значения.  
8.7 Функции для работы  с коллекциями объектов 
(COLLECTION ) 
Функции  из этой группы предназначены для оперирования переменными типа COLLECTION.  
Коллекция  является списком объектов,  с индексацией  по целочисленному ключу (начиная  
с 0). Коллекция может содержать элементы любых типов,  в том числе  и переменные типа 
COLLECTION. Коллекция может быть неоднородной, т.е. содержать объекты разных типов . 
В текущей реа лизации доступ к элементу коллекции  по индексу осуществляется за линейное 
время.  
8.7.1  CREATE_COLLECTION  
Первая функция создает пустую коллекцию, вторая является конструктором копирования.  
COLLECTION  CREATE_COLLECTION ()  
COLLECTION  CREATE_COLLECTION (COLLECTION IntValue)  
8.7.2  GET_COLLECTION_COUNT  
Функция возвращает количество элементов  в коллекции.  
DOUBLE  GET_COLLECTION_COUNT (COLLECTION Name)  
8.7.3  REMOVE_COLLECTION_ITEM  
Функция удаляет элемент  с индексом «index»  из коллекции «Name».  
COLLECTION  REMOVE_COLLECTION_ITEM (COLL ECTION Name, DOUBLE index)  
8.7.4  INSERT_COLLECTION_ITEM  
Функция вставляет значение «value»  в качестве элемента  с индексом «index».  
COLLECTION  INSERT_COLLECTION_ITEM (COLLECTION Name, DOUBLE index, 
ANY value)  
Выполняется вставка  в коллекцию элемента  с индексом «i ndex», существующий элемент 
коллекции  с индексом « index » сдвигается на единицу  в элемент  с индексом « index +1», и т.д. 
для всех с уществующих элементов, индекс которых равен или больше значения индекса 
вставки. См. пример к п. 8.7.6 . 

 
 28 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.7.5  SET_COLLECTION_ITEM  
Функция заменяет значение элемента  с индексом «index» на значение «value».  
COLLECTION  SET_COLLECTION_ITEM (COLLECTION Name, DOUBLE index, ANY  value)  
8.7.6  GET_COLLECTION_ITEM  
Функция возвращает значение элемента  с индексом « index».  
ANY GET_COLLECTION_ITEM (COLLECTION Name, DOUBLE index)  
Параметры : 
№ Параметр  Тип Описание  
1 INTVALUE  COLLECTION  Коллекция для инициализации вновь создаваемого объе кта 
2 NAME  STRING  Имя коллекции  
3 INDEX  DOUBLE  Индекс для обращения к коллекции. Должен содержать 
целочисленное значение  
4 VALUE  ANY Значение произвольного типа для включения  в коллекцию  
 
Пример : 
‘ 
col=CREATE_COLLECTION()  
FOR i FROM 0 TO 9  
 col=INSERT_COLLECTION_ITEM(col,0,0)  
 col=SET_COLLECTION_ITEM(col,0,i)  
END FOR 
s = GET_COLLECTI ON_ITEM(col,5)  
len = GET_COLLECTION_COUNT(col)  
‘ 
 
Создается пустая коллекция. Затем 10 раз  в коллекцию вставляется нулевой элемент  
со значением 0  и тут же его значение меняется на значение переменной цикла . В результате 
получается  коллекция  из 10-ти элемен тов. После выполнения програ ммы «s»=4, «len»=10,  
а «col» имеет следующий вид:  
0 1 2 3 4 5 6 7 8 9 
9 8 7 6 5 4 3 2 1 0 

 
 29 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.8 Функции для работы  с ассоциативными 
массивами ( MAP) 
Функции  из этой группы предназначены для оперирования переменными типа MAP.  
Ассоциат ивный массив (MAP) является последовательностью пар (ключ, значение), 
которая обеспечивает получение значения  по ключу. Каждому ключу соответствует 
максимум одно значение. Ассоциативный массив может содержать элементы любых типов,  
в том числе  и переменные структурных типов, разные элементы такого массива могут 
содержать объекты разных типов  в качестве значений . В качестве ключа всегда выступает 
строковое значение . В текущей реализации доступ к  элементу коллекции  по ключу 
осуществляется за линейное время.  
8.8.1  CREATE_MAP  
Первая функция создает пустой массив, вторая является конструктором копирования.  
MAP CREATE_MAP ()  
MAP CREATE_MAP (MAP IntValue)  
8.8.2  SET_VALUE  
Функция добавляет  в массив «Name» элемент  со значением «Value»  и ключом «Key». 
Если массив уже содержал элем ент с ключом «Key», то значение этого элемента заменяется 
на «Value». Функция возвращает модифицированный массив.  
MAP SET_VALUE(MAP Name, STRING Key, ANY Value)  
8.8.3  GET_VALUE  
Функция возвращает значение элемента  с ключом «Key»  из массива «Name». Если элемент  
не найден, то возвращ ается пустая строка.  
STRING   GET_VALUE(MAP Name, STRING Key)  
Параметры:  
№ Параметр  Тип Описание  
1 INTVALUE  MAP Массив для инициализации вновь создаваемого объекта  
2 NAME  STRING  Имя массива  
3 KEY STRING  Значение ключа для вставки или доступа к элементу массива  
4 VALUE  ANY Значение произвольного типа для добавления в  массив  

 
 30 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
Пример : 
‘ 
map=CREATE_MAP ()  
FOR i FROM 0 TO 9  
 map=SET_VALUE(map, "key" & i, i) 
END FOR 
s = GET_VALUE(map,  "key5") 
‘ 
 
Создается пустой массив. Затем,  в цикле,  в массив вставляются элементы  со значением 
равным переменной цикла  и ключом вида « "key" & i». После выполнения программы «s»=5.  
Функция возвращает значение  типа STRING , если оно не будет явно 
преобразовано к типу DOUBLE . 
 
Например:  
RES=0+GET _VALUE 
 
8.9 Функции дл я обращения к строкам 
произвольных таблиц QUIK  
Функции  из этой группы предназначены для доступа к данным, содержащимся  в таблицах 
Рабочего места QUIK.  
8.9.1  GET_ITEM  
Функция возвращает ассоциативный массив (MAP), содержащий информацию о данных  
из строки  с номеро м «Index»  из таблицы  с именем «TableName».  
MAP GET_ITEM(STRING TableName,DOUBLE Index)  
Возвращаемый массив,  в качестве своих элементов, содержит значения ячеек таблицы 
клиен тского места, ключами элементов являются названия колонок. Возможные значения 
поля «TableName»  и ключей приведены ниже  в таблицах. Для программ ируемой таблицы 
«OWN» значения ключей соответствуют названиям колонок, указанным  в секции описания 
параметров.  

 
 31 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.9.2  GET_NUMBER_OF  
Функция возвращает количество записей  в таблице TableName.  
DOUBLE  GET_N UMBER_OF(STRING TableName)  
Параметры:  
№ Параметр  Тип Описание  
1 TABLENAME  STRING  Имя таблицы QUIK  
2 INDEX  DOUBLE  Индекс для обращения к коллекции. Должен содержать 
целочисленное зн ачение . 
 
Пример:  
‘ 
n=GET_NUMBER_OF( "ALL_TRADES ") 
value=0 
FOR i FROM 1 to n 
 trade = GET_ITEM ("ALL_TRADES", i)  
 value = value + GET_VALUE (trade, "VALUE")  
END FOR 
‘ 
 
В данном примере сначала запрашивается количество записей  в Таблице обезличенных  
сделок, затем  в цикле для каждой записи получается соответствующий MAP  из которого  
достается знач ение по ключу «VALUE» . В итоге, переменная «value» содержит суммарный 
объем обезличенных  сделок на  данный момент.  
8.9.3  Описания таблиц  и параметров  
1. Таблицы, используемые  в функциях «GET_NUMBER_OF»  и «GET_ITEM»:  
TableName  Таблица  
ORDERS  Заявки  
STOP_ORDERS  Стоп заявки  
TRADES  Сделки  
ALL_TRADES  Обезличенные сделки  
MONEY_LIMITS  Позиции  по денежным средствам  

 
 32 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 TableName  Таблица  
DEPO_LIMITS  Позиции  по инструментам  
FUTURES_CLIENT_HOLDINGS  Позиции  по клиентским счетам (фьючерсы)  
FUTURES_CLIENT_LIMITS  Ограничения  по клиентским счетам (фьючерсы)  
NEG_DEALS  Таблица заявок на внебиржевые сделки  
NEGOTIATION_TRADES  Таблица сделок для исполнения  
NEG_DEAL_REPORTS  Таблица заявок -отчетов на сделки РПС  
POSITIONS  Позиции участника по деньгам  
FIRM_HOLDING  Позиции участника по и нструментам  
ACCOUNT_BALANCE  Позиции участника по торговым счетам  
OWN Таблица, создаваемая при расчете программы  
 
2. Описание параметров Таблицы заявок , возвращаемое функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные значения  
1 NUMBER  DOUBLE  Номер заяв ки в торговой 
системе  
2 EXCHANGE_CODE  STRING  Код биржи  в торговой 
системе  
3 DATE  DOUBLE  Дата выставления   
4 TIME DOUBLE  Время выставления   
5 ACTIVATION_TIME  DOUBLE  Время активации   
6 WITHDRAW_TIME  DOUBLE  Время снятия заявки   
7 SECURITY  STRING  Кратк ое наименование 
инструмента   
8 SECCODE  STRING  Код инструмента  заявки   
9 CLASS  STRING  Краткое название класса 
заявки  
10 CLASSCODE  STRING  Код класса заявки   
11 OPERATION  STRING  Операция  «SELL» или «BUY»  
12 ACCOUNT  STRING  Торговый счет   
13 PRICE  DOUBLE  Цена  
14 QUANTITY  DOUBLE  Количество  в лотах   

 
 33 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
15 BALANCE  DOUBLE  Остаток   
16 VALUE  DOUBLE  Объем  в денежных 
средс твах  
17 TRADE_CURRENCY  STRING  Валюта заявки   
18 YIELD  DOUBLE  Доходность   
19 ACCRUEDINT  DOUBLE  Накопленный купонный 
доход  
20 USERID  STRIN G Идентификатор 
трейдера  
21 FIRMID  STRING  Идентификатор фи рмы  
22 CLIENTCODE  STRING  Код клиента   
23 COMMENT  STRING  Комментарий   
24 STATUS  STRING  Статус заявки  «ACTIVE» или «KILLED» 
или «FILLED»  
25 TYPE STRING  Тип заявки  Последовательность трех 
символов: 
 1-й: «L»  – лимитирова нная, 
«M» – рыно чная; 
 2-й: «S»  – разрешить 
исполнение  по разным ценам, 
«O» – по одной ц ене; 
 3-й: «N»  – немедленно или 
отклонить, «W»  – снять 
остаток, «  » – нет условия  
26 TRANS_ID  DOUBLE  Идентификатор 
транза кции  
27 SETTLECODE  STRING  Код расчетов   
28 PRICE2  DOUBLE  Цена выкупа   
29 IS_MARKET_MAKER_
ORDER  STRING  Заявка Маркет -мейкера  «YES» или « »  
30 SESSION_DATE  DOUBLE  Дата текущей  торговой  
сессии   
31 TIME_MICROSEC  DOUBLE  Количество микросекунд 
во времени выставления   
32 WITHDRA W_DATE  DOUBLE  Дата снятия заявки   

 
 34 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
33 WITHDRAW_TIME_M
ICROSEC  DOUBLE  Количество микросекунд 
во времени снятия   
34 PERIOD  DOUBLE  Период торговой сес сии  «0» – открытие,  
 «1» – нормальный,  
 «2» – закрытие  
35 VISIBLE_QUANTITY  DOUBLE  Видимое количество. 
Параметр заявок типа 
«Айсберг»   
36 LINKED_ORDER  DOUBLE  Номер заявки  в торговой 
системе  
37 SEC_CURRENCY  STRING  Валюта расчетов   
38 EXPIRE_DATE  DOUBLE  Срок  
39 UID DOUBLE  UID  
 
3. Описание параметров Таблицы сделок , возвращаемое функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные значения  
1 NUMBER  DOUBLE  Номер сделки  в торговой 
системе  
2 EXCHANGE_CODE  STRING  Код биржи  в торговой 
системе   
3 DATE  DOUBLE  Дата совершения   
4 TIME DOUBLE  Время совершения   
5 ORDER_NUMBER  DOUBLE  Номер заявки  в торговой 
системе  
6 SECURITY  STRING  Краткое  название 
инструмента   
7 SECCODE  STRING  Код инструмента  заявки   
8 CLASS  STRING  Краткое название класса   
9 CLASSCODE  STRING  Код класса   
10 OPERATION  STRING  Операция  «SELL» или «BUY»  
11 TYPE STRING  Тип сделки  «MARGIN», если сдел ка 
маржинальная  
12 ACCOUNT  STRING  Торговый счет   

 
 35 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
13 PRICE  DOUBLE  Цена  
14 QUANTITY  DOUBLE  Количество  в лотах   
15 VALUE  DOUBLE  Объем  в денежных 
средствах   
16 TRADE_CURRENCY  STRING  Валюта   
17 SETTLE _CURRENCY  STRING  Валюта расчетов   
18 SETTLE_CODE  STRING Код расчетов   
19 YIELD  DOUBLE  Доходность   
20 ACCRUEDINT  DOUBLE  Накопленный купонный 
доход   
21 USERID  STRING  Идентификатор 
трейдера  
22 STATION_ID  STRING  Идентификатор рабочей  
станции  
23 FIRMID  STRING  Идентификатор дилера   
24 FIRMNAME  STRING  Идент ификатор 
организации тре йдера  
25 CLIENTCODE  STRING  Код клиента   
26 COMMENT  STRING  Комментарий   
27 PARTNER_FIRMID  STRING  Идентификатор фирмы 
партнера  
28 PARTNER_FIRM_NAM
E STRING  Название фирмы 
партнера  
29 PRICE2  DOUBLE  Цена выкупа   
30 REPORATE  DOUB LE Ставка РЕПО(%)   
31 TS_COMISSION  DOUBLE  Комиссия торговой 
системы   
32 CLEARING_
COMISSION  DOUBLE  Клиринговая комиссия 
(Московской Биржи )  
33 EXCHANGE_
COMISSION  DOUBLE  Комиссия Фондовой 
биржи ( Московской 
Биржи )  

 
 36 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
34 TECH_CENTER_
COMISSION  DOUBLE  Комис сия Технического 
центра ( Московской 
Биржи )  
35 ACCRUED2  DOUBLE  Доход(%) на дату 
выкупа  
36 REPOVALUE  DOUBLE  Сумма РЕПО   
37 REPO2VALUE  DOUBLE  Объем выкупа РЕПО   
38 REPOTERM  DOUBLE  Срок РЕПО   
39 START_DISCOUNT  DOUBLE  Начальный дисконт(%)   
40 LOWER_DISC OUNT  DOUBLE  Нижний дисконт(%)   
41 UPPER_DISCOUNT  DOUBLE  Верхний дисконт(%)   
42 BLOCK_SECURITIES  STRING  Блокировка обеспеч ения «Да» или «Нет»  
43 SESSION_DATE  DOUBLE  Дата текущей торговой 
сессии   
44 TIME_MICROSEC  DOUBLE  Количество микросекунд 
во вр емени совершения   
45 PERIOD  DOUBLE  Период торговой сессии   «0» – открытие;  
 «1» – нормальный;  
 «2» – закрытие  
46 KIND DOUBLE  Вид сделки   «1» – обычная;  
 «2» – адресная;  
 «3» – первичное 
размещение;  
 «4» – перевод денег / 
инструментов ; 
 «5» – адресная сделка 
первой час ти РЕПО ; 
 «6» – расчетная  по операции 
своп;  
 «7» – расчетная  
по внебиржевой опер ации 
своп;  
 «8» – расчетная сде лка 
бивалютной корз ины; 
 «9» – расчетная внебиржевая 
сделка б ивалютной корзины ; 
 «10» – сделка по операции 
РЕПО с ЦК;  
 «11» – первая час ть сделки 
по оп ерации РЕПО с ЦК;  

 
 37 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
 «12» – вторая часть сделки 
по операции РЕПО с ЦК;  
 «13» – адресн ая сделка по 
операции РЕПО с ЦК;  
 «14» – первая часть адресн ой 
сделки по операции РЕПО с 
ЦК; 
 «15» – вторая часть адресной 
сделки по операции РЕПО с 
ЦК; 
 «16» – техническая сделк а по 
возврату активов РЕПО с ЦК ; 
     «17» – сделка по спреду 
между фьючерсами разных 
сроков на один актив;  
 «18» – техническая сделка 
первой части от спреда 
между фьючерсами;  
 «19» – техническая сделка 
второй части от спреда между 
фьючерсами;  
 «20» – адресна я сделка 
первой части РЕПО с 
корзиной;  
 «21» – адресная сделка 
второй части РЕПО с 
корзиной;  
 «22» – перенос позиций 
срочного рынка»;  
 «23» – Late correction – 
XLON;  
 «24» – Not to mark – XLON;  
 «25» – Previous Day Contra;  
 «26» – Ordinary trade 
immediate public ation – XLON ; 
 «27» – Inter Fund Tran sfer 
delayed publication – XOFF;  
 «28» – Negotiated T rade 
delayed publication – XLON;  
 «29» – Negotiated Tra de 
immediate publication – XLON;  
 «30» – OTC Late Correction – 
XOFF;  
 «31» – Ordinary T rade delayed 
publication – XLON; 
 «32» – Ordinary Trade 
Immediate publication – XOFF; 
 «33» – SI Late Correction;  

 
 38 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
 «34» – SI Trade immediate 
publication;  
 «35» – SI Trade delayed 
publication;  
 «36» – OTC T rade delayed 
publication – XOFF;  
 «37» – OTC MTF TBA 1;  
 «38» – OTC trade – delayed 
publication MT F TBA 1;  
 «39» – Inter fund cross - 
delayed publication requested 
MTF TBA 1;  
     «40» – Cancellation of OTC 
trade after date of  publication 
MTF TBA 1;  
 «41» – OTC MTF TBA 2;  
 «42» – OTC trade – delayed 
publication MTF TBA 2;  
 «43» – Inter fund cro ss - 
delayed publication requested 
MTF TBA 2;  
 «44» – Cancellation of OTC 
trade after date of  publication 
MTF TBA 2;  
 «45» – OTC MTF TBA 3;  
 «46» – OTC trade – delayed 
publication MTF TBA 3;  
 «47» – Inter fund cross - 
delayed publication requested 
MTF TBA 3;  
 «48» – Cancellation of OTC 
trade after date of  publication 
MTF TBA 3;  
 «49» – OTC MTF TBA 4;  
 «50» – OTC trade – delayed 
publication MTF TBA 4;  
 «51» – Inter fund cross - 
delayed publication requested 
MTF TBA 4;  
 «52» – Cancellation of OTC 
trade after date of   publication 
MTF TBA 4;  
 «53» – Delayed Publication 
Late Correction XLON;  
 «54» – No to Mark Late 
Correction XLON;  
 «55» – Витринная сделка по 
операции своп;  

 
 39 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные значения  
 «58» – Витринная сделка по 
адресной операции своп;  
 «59» – Витринная сделка по 
Беспоставочному свопу;  
 «60» – Сделка FX SPOT;  
     «61» – Сделка по 
Беспоставочному валютному 
форвардному контракту;  
 «62» – Сделка FX DEPOSIT;  
 «63» – Сделка по Валютному 
расчетному форвардному 
контракту  
 
4. Описание параметров Таблицы обезличенных  сделок , возвращаемое функцией 
«GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 NUMBER  DOUBLE  Номер сделки  в торговой 
системе  
2 DATE  DOUBLE  Дата выставления   
3 TIME DOUBLE  Время выставления   
4 SECURITY  STRING  Краткое  наименование 
инструмента   
5 SECCODE  STRING  Код инструмента  заявки   
6 CLASS  STRING  Краткое название 
класса   
7 CLASSCODE  STRING  Код класса   
8 PRICE  DOUBLE  Цена  
9 QUANTITY  DOUBL E Количество  в лотах   
10 VALUE  DOUBLE  Объем  в денежных 
средствах   
11 OPERATION  STRING  Направление операции  «SELL» или «BUY»  
12 ACCRUEDINT  DOUBLE  Накопленный купонный 
доход   
13 YIELD  DOUBLE  Доходность   
14 SETTLE_CODE  STRING  Код расчетов   

 
 40 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
15 REPORATE  DOUBLE  Ставка РЕПО(%)   
16 REPOVALUE  DOUBLE  Сумма РЕПО   
17 REPO2VALUE  DOUBLE  Объем выкупа РЕПО   
18 REPOTERM  DOUBLE  Срок РЕПО   
19 SESSION_DATE  DOUBLE  Дата текущей торговой 
сессии   
20 TIME_MICROSEC  DOUBLE  Количество микросекунд 
во вр емени совершения   
21 PERIOD  DOUBLE  Период торговой сессии   «0» – открытие;  
 «1» – нормальный;  
 «2» – закрытие  
 
5. Описание параметров Таблицы стоп -заявок , возвращаемое функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 NUMBER  DOUBLE  Регистрационный 
номер стоп-заявки  на 
сервере QUIK   
2 DATE  DOUBLE  Дата выставления   
3 TIME DOUBLE  Время выставл ения  
4 WITHDRAW_TIME  DOUBLE  Время снятия заявки   
5 STOP_ORDER_TYPE  DOUBLE  Вид стоп заявки   «1» – стоп-лимит;  
 «2» – условие  по другому 
инструме нту; 
 «3» – со связанной зая вкой; 
 «6» – тейк-профит;  
 «7» – стоп-лимит  
по исполнению активной 
заявки; 
 «8» – тейк-профит  
по исполнению активной 
заявки ; 
 «9» – тейк-профит  и стоп-
лимит  
6 TYPE STRING  Тип заявки  Последовательность трех 
символов:  
 1-й: «L» – лимитированная, 
«M» – рыночная;  
 2-й: «S» – разрешить 

 
 41 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
исполнение  по разным ц енам, 
«O» – по одной цене;  
 3-й: «N» – немедленно или 
отклонить, «W» – снять 
остаток, « » – нет условия  
7 SECURITY  STRING  Краткое название 
инструмента   
8 SECCODE  STRING  Код инструмента  
заявки   
9 CLASS  STRING  Краткое н азвание 
класса з аявки  
10 CLASSCODE  STRING  Код класса заявки   
11 OPERATION  STRING  Операция  «SELL» или «BUY»  
12 ACCOUNT  STRING  Торговый счет   
13 COND ITION_SECURIT
Y STRING  Инструмент стоп-цены   
14 COND ITION_SECCODE  STRING  Код инструмента  стоп-
цены   
15 COND ITION_CLASS  STRING  Класс стоп -цены   
16 CONDITION_
CLASSCODE  STRING  Код класса стоп -цены   
17 CONDITION  STRING  Направленность стоп -
цены  «LESS_OR_EQUAL_VALUE» или 
«GREATER_OR_EQUAL_VALUE»  
18 COND ITION_PRICE  DOUBLE  Стоп-цена  
19 CONDITION2  STRING  Напра вленность стоп -
лимит цены (для 
заявок типа «Тейк-
профит  и стоп-лимит»)  «LESS_OR_EQUAL_VALUE» или 
«GREATER_OR_EQUAL_VALUE»  
20 COND ITION_PRICE2  DOUBLE  Стоп-лимит цена (для 
заявок типа «Т ейк-
профит  и стоп-
лимит»)   
21 PRICE  DOUBLE  Цена  
22 MARKET_STOP_LIMIT  STRING  Признак исполнения 
заявки «стоп -лимит»  
по рыночной цене 
(для за явок типа 
«Тейк-профит  и стоп-«Да» либо пусто  

 
 42 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
лимит»)  
23 QUANTITY  DOUBLE  Количество  в лотах  
24 BALANCE  DOUBLE  Активное колич ество  
25 FILLED_VOLUME  DOUBLE  Исполненное 
колич ество  
26 FIRMID  STRING  Дилер   
27 UID DOUBLE  UID  
28 CLIENTCODE  STRING  Код клиента   
29 COMMENT  STRING  Комментарий   
30 LINKED_ORDER  DOUBLE  Номер заявки  
в торговой системе, 
зарегистрирова нной 
по наступлению 
условия стоп -цены   
31 ALL_TRADE_NUMBER  DOUBLE  Сделка  условия   
32 EXPIRE_DATE  DOUBLE  Срок  
33 EXPIRY_DA TE_IS_
TODAY  STRING  Срок действия заявки 
равен «Сегодня»   
34 ACTIVE_IN_TIME_
INTERVAL  STRING  Признак действия 
заявки типа «Т ейк-
профит  и стоп-лимит»  
в течение п ериода 
времени  «Да» либо пусто  
35 ACTIVE_FRO M_TIME  DOUBLE  Время начала периода 
действия заявки типа 
«Тейк-профит  и стоп-
лимит»   
36 ACTIVE_TO_TIME  DOUBLE  Время окончания 
периода де йствия 
заявки типа «Т ейк-
профит  и стоп-лимит»   
37 USE_ BASE_ORDER_
BALANCE  STRING  Брать исполненный 
объем  в качестве 
количества в ыстав-
ляемой стоп -заявки 
(для заявок 
«по исполн ению»)  «Да» либо пусто  
38 KILL_IF_LINKED_ORDE
R_PARTLY_FILLED  STRING  При частичном 
исполн ении связанной «Да» либо пусто  

 
 43 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
заявки снять стоп -
заявку (для заявок 
«по исполнению»)  
39 ACTIVATE_IF_BASE_
ORDER_PARTLY_FILLED  STRING  Частичное исполнение 
учитывается (для 
заявок «по 
исполнению»)  «Да» либо пусто  
40 TYPE_DESCRIPTION  STRING  Тип  
41 STATUS  STRING  Статус  заявки  «ACTIVE» , «KILLED» или 
«FILLED»  
42 RESULT_DESCRIPTION  STRING  Результат   «Отве ргнута ТС»;  
 «Не прошла контроль 
лимитов»;  
 «Связ. заявка сн ята»; 
 «Связ. заявка исполн ена»; 
 «Рассчитывается min \max»;  
 «Ждет акти вации»;  
 «Рассчитывается min \max 
и ждет актив ации»;  
 «Снята»;  
 «Выставлена заявка  в ТС» 
43 СO_ORDER_NUMBER  DOUBLE  Связанная заявка   
44 CO_ORDER_ PRICE  DOUBLE  Цена связанной 
заявки  
45 TRANS_ID  DOUBLE  Идентификатор 
транзакции   
46 OFFSET  DOUBLE  Отступ от min/max   
47 OFFSET_UNITS  STRING  Единицы отступа  «%» или «Д»  
48 SPREAD  DOUBLE  Защитный спр ед  
49 SOE_USE_SPREAD_AS
_PERCENTS  STRING  Значение «защ итного 
спреда» указано  
в процентах  «Да» либо пусто  
50 MARKET_TAKE_PROFI
T STRING  Признак исполнения 
заявки «т ейк-профит»  
по рыночной цене 
(для за явок типа 
«Тейк-профит  и стоп-
лимит»)  «Да» либо пусто  
51 BASE_ORDER_NUM  DOUBLE  Заявка условия   

 
 44 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
52 OWNER_SERVE R STRING  Сервер  «Другой» или «Тек ущий»  
 
6. Описание параметров таблицы «Позиции по деньгам» , возвращаемое фун кцией 
«GET_ITEM»:  
№ Параметр  Тип Описание  
1 FIRMID  STRING  Идентификатор фирмы  
2 CURRCODE  STRING  Код валюты  
3 TAG STRING  Код позиции  
4 CLIENT_CODE  STRING  Код клиента  
5 OPEN_BALANCE  DOUBLE  Входящий остаток  по деньгам  
6 OPEN_LIMIT  DOUBLE  Входящий лимит  по деньгам  
7 CURRENT_BALANCE  DOUBLE  Текущий остаток  по деньгам  
8 CURRENT_LIMIT  DOUBLE  Текущий лимит  по деньгам  
9 LOCKED  DOUBLE  Заблокированное кол ичество  
10 AVAILABLE  DOUBLE  Доступное количество  
11 LOCKED_VALUE  DOUBLE  Количество денежных средств, заблокированное на 
покупку немарж инальных инструментов  
12 LIMIT_KIND  DOUBLE  Срок расчётов  
 
7. Описание параметров таблицы «Позиции по инструментам» , возвр ащаемое 
функцией «GET_ITEM»:  
№ Параметр  Тип Описание  
1 FIRMID  STRING  Идентификатор фирмы  
2 SECCODE  STRING  Код инструмента  
3 TRDACCID  STRING  Счет депо  
4 CLIENT_CODE  STRING  Код клиента  
5 OPEN_BALANCE  DOUBLE  Входящий остаток  по инструментам  
6 OPEN_LIMIT  DOUBLE  Входящий лимит  по инструментам  
7 CURRENT_BALANCE  DOUBLE  Текущий остаток  по инструментам  

 
 45 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  
8 CURRENT_LIMIT  DOUBLE  Текущий лимит  по инструментам  
9 LOCKED_SELL  DOUBLE  Заблокировано  
10 AVAILABLE  DOUBLE  Доступное количество  
11 WA_POSITION_PRICE  DOUBL E Цена приобретения  
12 LIMIT_KIND  DOUBLE  Срок расчётов  
 
8. Описание параметров Таблицы ограничений  по клиентским счетам , возвращаемое 
функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные значения  
1 FIRMID  STRING  Идентификатор фирмы   
2 TRDACCID  STRING  Торговый счет   
3 TYPE STRING  Тип лимита  «Ден.средства » или «Вс его» 
4 CBP_PREV_LIMIT  DOUBLE  Предыдущий лимит 
открытых п озиций   
5 CBPLIMIT  DOUBLE  Лимит открытых 
позиций  
6 CBPLUSED  DOUBLE  Текущие чистые 
позиции  
7 CBPLUSED_FOR_
ORDERS  DOUBLE  Текущие чисты е 
позиции (под  заявки)   
8 CBPLUSED_FOR_
POSITIONS  DOUBLE  Текущие чистые 
позиции (под  открытые 
позиции)   
9 CBPLPLANNED  DOUBLE  Планируемые чистые 
позиции  
10 VARMARGIN  DOUBLE  Вариационная маржа   
11 ACCRUEDINT  DOUBLE  Накопленный доход   
12 OPTIONS_PREMIUM  DOUBLE  Премия  по опционам   
13 TS_COMISSION  DOUBLE  Биржевые сборы   
14 KGO DOUBLE  Коэффициент 
клиентского  
гарантийного 
обеспечения   

 
 46 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
9. Описание параметров Таблицы позиций  по клиентским счетам , возвращаемое 
функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возмо жные знач ения 
1 FIRMID  STRING  Идентификатор фирмы   
2 TRDACCID  STRING  Торговый счет   
3 SECCODE  STRING  Код фьючерсного 
контракта   
4 SEC_SHORT_NAME  STRING  Краткое название 
контракта   
5 TYPE STRING  Тип лимита  «Основной счет» или 
«Клиентские  
и дополн ительн ые счета» или 
«Все счета торг. членов» или 
<пусто>  
6 START_BUY  DOUBLE  Входящие длинные 
позиции   
7 START_SELL  DOUBLE  Входящие короткие 
позиции   
8 START_NET  DOUBLE  Входящие чистые 
позиции   
9 TODAY_BUY  DOUBLE  Текущие длинные 
позиции   
10 TODAY_SELL  DOUBLE  Текущие короткие 
позиции   
11 TOTAL_NET  DOUBLE  Текущие чистые п озиции   
12 OPEN_BUYS  DOUBLE  Активные на поку пку  
13 OPEN_SELLS  DOUBLE  Активные на пр одажу  
14 CBPLUSED  DOUBLE  Оценка текущих чистых 
позиций  
15 CBPLPLANNED  DOUBLE  Плановые чистые 
позиции   
16 VARMARGIN  DOUBLE  Вариационная маржа   
17 AVRPOSNPRICE  DOUBLE  Эффективная цена 
позиций   

 
 47 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возмо жные знач ения 
18 POSITIONVALUE  DOUBLE  Стоимость позиций   
 
10. Описание параметров Таблицы заявок на внебиржевые сделки , возвраща емое 
функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 NUMBER  DOUBLE  Номер   
2 QUOTENO  DOUBLE  Встречная безадресная 
заявка   
3 DATE  STRING  Дата выставления заявки   
4 TIME STRING  Время выставления 
заявки  
5 ACTIV ATION_DATE  DOUBLE  Дата активации заявки   
6 ACTIV ATION_TIME  DOUBLE  Время актива ции заявки   
7 SECURITY  STRING  Краткое название 
инструмента   
8 SECCODE  STRING  Код инструмента   
9 CLASS  STRING  Класс   
10 CLASSCODE  STRING  Код класса   
11 OPERATION  STRING  Операция  «Купля» либо «Прод ажа» 
12 ACCOUNT  STRING  Счет  
13 PRICE  DOUBLE  Цена  
14 QUANTITY  DOUBLE  Количество   
15 USERID  STRING  Трейдер   
16 FIRMID  STRING  Идентификатор дилера   
17 FIRMNAME  STRING  Идентификатор 
организации трейдера   
18 UID DOUBLE  UID  
19 CPUSERID  STRING  Трейдер партнера   
20 CPFIRMID  STRING  Идентификатор партнера   
21 CPFIRMNAME  STRING  Организация партнёр   

 
 48 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
22 CLIENTCODE  STRING  Код клиента   
23 COMMENT  STRING  Комментарий   
24 MATCH_REFERENCE  STRING  Ссылка   
25 STATUS  STRING  Состояние  «Активна», «Исполнена» 
или «Снята» 
26 SETTLE_CODE  STRING  Код расчетов   
27 DIRECTION  STRING  Направленность  «Отправлена», «Пол учена» 
или «Отправлена  и получена»  
28 YIELD  DOUBLE  Доходность   
29 VALUE  DOUBLE  Объем   
30 ACCRUEDINT  DOUBLE  Купонный процент   
31 PRICE2  DOUBLE  Цена выкупа   
32 REFUNDRATE  DOUBLE  Ставка возмещения (%)   
33 REPORAT E DOUBLE  Ставка РЕПО (%)   
34 TRANS_ID  DOUBLE  ID транзакции   
35 REPOVALUE  DOUBLE  Сумма РЕПО   
36 REPO2VALUE  DOUBLE  Объем выкупа РЕПО   
37 REPOENTRY  STRING  Тип ввода заявки РЕПО  «Цена1+Ставка», «Ставка+  
Цена2» , «Цена1+Цена2» , 
«Сумма РЕПО + Количество », 
«Сумма РЕПО + Дисконт », 
«Количество + Дисконт », 
«Сумма РЕПО », 
«Количество»  
38 REPOTERM  DOUBLE  Срок РЕПО   
39 START_DISCOUNT  DOUBLE  Начальный дисконт(%)   
40 LOWER_DISCOUNT  DOUBLE  Нижний дисконт(%)   
41 UPPER_DISCOUNT  DOUBLE  Верхний дисконт(%)   
42 BLOCK_SECU RITIES  STRING  Блокировка обеспечения  «Да» или «Нет»  
43 ORIG_REPOVALUE  DOUBLE  Сумма РЕПО 
первоначальная   
44 ORIG_VOLUME  DOUBLE  Количество 
первоначал ьное  

 
 49 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
45 ORIG_DISCOUNT  DOUBLE  Процент дисконта 
первоначальный   
46 WITHDRAW_TIME  DOUBLE  Время снятия заявк и  
47 BALANCE  DOUBLE  Остаток   
48 SETTLE_CURRENCY  STRING  Валюта расчетов   
 
11.Описание параметров Таблицы сделок для исполнения , возвращаемое функцией 
«GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 NUMBER  DOUBLE  Номер   
2 ORDER_NUMBER  DOUBLE  Номе р заявки   
3 DATE  STRING  Дата торгов   
4 SETTLEDATE  STRING  Дата расчетов   
5 CLASS  STRING  Класс   
6 CLASSCODE  STRING  Код класса   
7 SECCODE  STRING  Код инструмента   
8 SECURITY  STRING  Краткое наименование 
инструмента   
9 OPERATION  STRING  Операция  «Купля» ли бо «Продажа»  
10 CLIENTCODE  STRING  Код клиента   
11 COMMENT  STRING  Комментарий   
12 FIRMID  STRING  Идентификатор дил ера  
13 FIRMNAME  STRING  Идентификатор 
организ ации трейдера   
14 ACCOUNT  STRING  Счет депо   
15 CPFIRMNAME  STRING  Партнер   
16 CPFIRMID  STRING  Идентификатор 
партнера  
17 CPACCOUNT  STRING  Счет депо партнера   
18 PRICE  DOUBLE  Цена  

 
 50 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
19 QUANTITY  DOUBLE  Количество   
20 VALUE  DOUBLE  Объем   
21 STATUS  STRING  Состояние   «FILLED» – исполнена;  
 «NOT FILLED» – 
не исполн ена; 
 «INCLUDE IN R EPORT» – 
включена  в отчет  
22 ACCRUEDINT  DOUBLE  Купонный %   
23 PRICE1  DOUBLE  Цена 1ой части Р ЕПО  
24 PRICE2  DOUBLE  Цена выкупа   
25 REPORTTRADENO  DOUBLE  Номер сделки 1ой части 
РЕПО  
26 REPORATE  DOUBLE  Ставка РЕПО(%)   
27 SETTLE_CODE  STRING  Код расчетов   
28 REPORT_NUM  DOUBLE Отчет   
29 CPREPORT_NUM  DOUBLE  Отчет  партнера   
30 TS_COMISSION  DOUBLE  Комиссия торговой 
системы  
31 BALANCE  DOUBLE  Остаток   
32 SETTLETIME  STRING  Время исполнения   
33 AMOUNT  DOUBLE  Сумма обязательс тва  
34 REPOVALUE  DOUBLE  Сумма РЕПО   
35 REPOTERM  DOUBLE  Срок РЕПО   
36 REPO2VALUE  DOUBLE  Объем выкупа РЕПО   
37 RETURN_VALUE  DOUBLE  Сумма возврата Р ЕПО  
38 DISCOUNT  DOUBLE  Дисконт(%)   
39 LOWER_DISCOUNT  DOUBLE  Нижний дисконт(%)   
40 UPPER_DISCOUNT  DOUBLE  Верхний дисконт(%)   
41 BLOCK_SECURITIES  STRING  Блокировать 
обеспеч ение «Да» либо «Нет»  
42 URGENCY_FLAG  STRING  Исполнить  «Да» либо «Нет»  

 
 51 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  Возможные знач ения 
43 TRADE_TYPE  STRING  Тип  «Внесистемная сде лка»; 
 «Первая часть сде лки 
РЕПО»;  
 «Вторая часть сде лки 
РЕПО»;  
 «Компенсационный взнос»  
44 TRADE_OPERATION_
TYPE STRING  Направ ленность  «Зачислить» либо «Сп исать»  
45 EXPECTED_DISCOUN
T DOUBLE  Дисконт после 
взноса(%)   
46 EXPECTED_QUANTITY  DOUBLE  Количество после 
взноса   
47 EXPECTED_
REPOVALUE  DOUBLE  Сумма РЕПО после 
взноса  
48 EXPECTED_
REPO2VALUE  DOUBLE  Стоимость выкупа 
после в зноса  
49 EXPECTED_RETURN_
VALUE  DOUBLE  Сумма возврата после 
взноса   
50 REPORT_TRADE_DAT
E DOUBLE  Дата заключения   
51 STATE_OF_CLEARING  STRING  Состояние расчетов   «Processed»;  
 «Not processed»;  
 «Is proces sing» 
52 TYPE_OF_CLEARING  STRING  Тип клиринга   «Not set»; 
 «Simple»;  
 «Multilateral»  
53 REPORT_COMISSION  DOUBLE  Комиссия за отчет   
54 COUPON_PAYMENT  DOUBLE  Купонная выплата   
55 COUPON_PAYMENT_
DATE  DOUBLE  Дата купонной 
выплаты   
56 PRINCIPAL_PAYMENT  DOUBLE  Выплата  по основному 
долгу   
57 PRINC IPAL_PAYMENT
_DATE  DOUBLE  Дата выплаты  
по основн ому долгу   
58 SETTLE_CURRENCY  STRING  Валюта расчетов   
 

 
 52 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 12. Описание параметров Таблицы заявок -отчетов на сделки РПС , возвраща емое 
функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 NUMBER  DOUBLE  Номер   
2 DATE STRING  Дата  
3 TIME STRING  Время выставления 
заявки   
4 CLASS  STRING  Класс   
5 SECCODE  STRING  Код инструмента   
6 SECURITY  STRING  Краткое наименование 
инструмента   
7 USERID  STRING  Идентификатор 
трейдера   
8 FIRMID  STRING  Идентификатор дилера   
9 FIRMN AME STRING  Идентификатор 
организации трейдера   
10 ACCOUNT  STRING  Счет депо   
11 CPFIRMNAME  STRING  Партнер   
12 CPFIRMID  STRING  Идентификатор 
партнера   
13 CPACCOUNT  STRING  Счет депо партнера   
14 QUANTITY  DOUBLE  Количество   
15 VALUE  DOUBLE  Объем   
16 COMISSION  DOUBLE  Комиссия   
17 DIRECTION  STRING  Направленность  «Отправлен» или «Пол учен» 
18 STATUS  STRING  Состояние  «Ждет исполнения», «Снят»  
либо «Исполнен»  
19 REPORT_TYPE  STRING  Тип отчета  «EXECUTION» или «CANCEL 
EXECUTION»  
20 REPORT_KIND  STRING  Вид отче та  
 

 
 53 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 13.Описание параметров таблицы  «Позиции участника по деньгам» , возвращаемое 
функцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 FIRMID  STRING  Фирма   
2 CURRCODE  STRING  Валюта   
3 TAG STRING  Код позиции   
4 DESCRIPTION  STRING  Описание   
5 OPENBAL  DOUBLE  Входящий   
6 CURRENTPOS  DOUBLE  Текущий   
7 PLANNEDPOS  DOUBLE  Плановый   
8 LIMIT1  DOUBLE  Внешнее ограничение   
9 ORDERBUY  DOUBLE  На покупку (в 
заявках)   
10 ORDERSELL  DOUBLE  На продажу (в 
заявках)   
11 NETOBLIGATION  DOUBLE  Нетто   
12 PLANNEDB AL DOUBLE  Контрольная   
13 BANK_ACC_ID  STRING  Идентификатор счета   
 
14. Описание параметров таблицы  «Позиции участника по инструментам» , 
возвращаемое фун кцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 FIRMID  STRING  Фирма   
2 SEC_SHORT_NAME  STRING Название инструмента   
3 SECCODE  STRING  Код инструмента   
4 OPENBAL  DOUBLE  Входящий   
5 CURRENTPOS  DOUBLE  Текущий   
6 PLANNEDPOSBUY  DOUBLE  Плановая покупка   
7 PLANNEDPOSSELL  DOUBLE  Плановая продажа   
8 USQTYB  DOUBLE  Куплено   
9 USQTYS  DOUBLE  Продано   

 
 54 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
15.Описание параметров таблицы  «Позиции участника по торговым счетам », 
возвращаемое фун кцией «GET_ITEM»:  
№ Параметр  Тип Описание  Возможные знач ения 
1 SECCODE  STRING  Код инструмента   
2 SEC_SHORT_NAME  STRING  Название инструмента   
3 FIRMID  STRING  Идентифика тор фирмы   
4 TRDACCID  STRING  Торговый счет   
5 DEPACCID  STRING  Счет депо   
6 OPENBAL  DOUBLE  Входящий   
7 CURRENTPOS  DOUBLE  Текущий   
8 PLANNEDPOSBUY  DOUBLE  Плановая покупка   
9 PLANNEDPOSSELL  DOUBLE  Плановая продажа   
10 PLANBAL  DOUBLE  Контрольный   
11 USQTYB  DOUBLE  Куплено   
12 USQTYS  DOUBLE  Продано   
13 PLANNED  DOUBLE  Плановый   
 
8.10  Функции для обращения к спискам доступных 
параметров  
8.10.1  GET_CLASSES_LIST  
Функция предназначена для получения списка кодов классов, полученных  с сервера  в ходе 
текущего сеанса связи . Разделителем  в списке кодов классов выступает запятая «,». 
GET_CLASSES_LIST ()  
Пример : 
‘ 
ClassesList = GET_CLASSES_LIST ()  
‘ 
 

 
 55 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Переменной «ClassesList» присваивается список доступных классов, например « TQBR, TQBS, 
TQNL, TQOB, TQOS, TQNO». 
8.10.2  GET_CLASS _SECURI TIES   
Функция предназначена для получения списка кодов инструментов  для списка классов, 
заданного списком кодов. Разделит елем в списке кодов инструментов  выступает запятая «,».  
GET_CLASS_SECURITIES (STRING)  
Пример : 
‘ 
SecuritiesList = GET_CLASS_SECURITIES ( "TQBR,GKO") 
‘ 
 
Переменной «SecuritiesList» присваивается список кодов всех доступных инструментов  для 
классов «А1 -Акции»  и «ГКО».  
8.10.3  GET_SECURITY_INFO  
Функция возвращает информацию  по инструменту  с кодом «sec_code»  из класса  с кодом 
«class_code». Если «class_ code» равен «», то ищет  по всем классам  до первого нахождения.  
MAP GET_SECURITY_INFO (STRI NG class_code, STRING sec_code)  
Параметры:  
№ Параметр  Тип Описание  
1 CODE  STRING  Код инструмента  
2 NAME  STRING  Наименование инструмента  
3 SHORT_NAME  STRING  Краткое  наименование  
4 CLASS_CODE  STRING  Код класса  
5 CLASS_NAME  STRING  Наименование класса  
6 FACE_VALUE  DOUBLE  Номинал  
7 FACE_UNIT  STRING  Код валюты номинала  
8 SCALE  DOUBLE  Количество значащих цифр после запятой  
9 MAT_DATE  STRING  Дата погашения  
10 LOT_SIZ E DOUBLE  Размер лота  

 
 56 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
Пример:  
‘ 
SecInfo = GET_SECURITY_INFO( "","YUKO") 
Lot = GET_VALUE (SecInfo, "LOT_SIZE ") 
‘ 
 
Переменной «SecInfo» присваиваются значения параметров инструмента  «YUKO». 
Переменная «Lot» содержит количество инструментов  в одном лоте «YUKO ». 
8.11  Функции для работы  с программируемой 
таблицей  
Следующий набор функций оперирует только  с таблицей «OWN», создаваемой при расчете 
программы. Данная таблица доступна  не только для чтения  с помощью стандартных 
функции «GET_ITEM»  и «GET_NUMBER_OF», но также  и для модификации  с помощью 
следующих функций.  
8.11.1  ADD_ITEM  
Данная функция вставляет строку  с индексом « Index » в таблицу «OWN». Ассоциативный 
массив  «table_string » используется для инициализации колонок таблицы значениями. 
«Table _string » должен содержать элем енты с ключами равными н азваниям колонок.  
ADD_ITEM (DOUBLE Index, MAP table_string)  
8.11.2  MODIFY_ITEM  
Функция модифицирует уже существующую строку  с индексом «Index»  с помощью массива 
«table_string».  
MODIFY_ITEM (DOUBLE Index, MAP table_string)  
8.11.3  DELETE_ITEM  
Функц ия предназначена для удаления строки  с индексом «Index».  
DELETE_ITEM (DOUBLE Index)  

 
 57 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.11.4  DELETE_ALL_ITEMS  
Функция полностью очищает таблицу «OWN».  
DELETE_ALL_ITEMS()  
Параметры:  
№ Параметр  Тип Описание  
1 INDEX  DOUBLE  Индекс для обращения к коллекции. Должен сод ержать 
целочисленное зн ачение  
2 TABLE_STRING  MAP Массив, содержащий значения для колонок модифицируемой строки  
 
Пример : 
‘ 
st=CREATE_MAP()  
st=SET_VALUE(st,  "Value",10) 
ADD_ITEM(1,st)  
st=GET_ITEM ( "OWN",1) 
value=GET_VALUE(st, "Value") 
DELETE_ALL_ITEMS()  
‘ 
 
Данный пример может работать только  с таблицей, содержащей единственную колонку  
с именем «Value». Сначала создается массив, содержащий элемент  со значением «10»  
и ключом «Value». Затем,  в таблице создается строка  с индексом «1»  и значением колонки 
«Value» равным «10» . В дальнейшем строка  с индексом «1» считывается обратно  в массив  
и значение элемента  с ключом «Value» попадает  в переменную «value». И, наконец, все 
строки та блицы удаляются вызовом «DELETE_ALL_ITEMS()».  
8.11.5  SET_ROW _COLOR  
Функция назначения цвета ф она указанной строки таблицы. Данная функция относится 
к предыдущей версии языка  и сохранена для совместимости.  
SET_ROW_COLOR (STRING client_code, STRING background_color, 
STRING  selected_background_color)  

 
 58 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Параметры:  
№ Параметр  Тип Описание  
1 CLIENT_CODE  STRING  Код клиента, при установке этого параметра  
в «ROWNAME» цвет подсве тки устанавливается на 
текущего рассчитываемого клиента  
2 BACKGROUND_COLOR  STRING  Основной цвет подсветки строки  
3 SELECTED_BACKGROUND_COLOR  STRING  Цвет подсветки строки, когда стро ка выделена  
 
Цвет фона (подсветки) задается макросом «RGB(<red>, <green>, <blue>)». Например, если  
в качестве параметра цвета передадите  в функцию строку «RGB(255, 0, 0)», то цвет 
подсветки установится  в красный. Для использования системного цвета  по умолчанию 
используйте строку «DEFAULT_COLOR».  
Пример : 
‘ 
SET_ROW_COLOR (ROWNAME, "RGB(0,255,0) ", "DEFAULT_COLOR ") 
‘ 
 
Основной цвет строки таблицы для текущего рассчитываемого клиента здесь 
устанавливается  в зеленый, цвет в ыделенной строки – по умолчанию.  
8.11.6  SET_RO W_COLOR_EX  
Функция назначения цвета фона  и шрифта указанной строки таблицы.  
SET_ROW_COLOR_EX (DOUBLE row_number, STRING background_color, STRING  
selected_background_color, STRING font_color, STRING  selected_font_color)  
Параметры:  
№ Параметр  Тип Описание  
1 ROW_NUMBER  DOUBLE  Номер строки для подсветки  
2 BACKGROUND_COLOR  STRING  Основной цвет фона строки  
3 SELECTED_BACKGROUND_COLOR  STRING  Цвет фона строки, когда строка выделена 
курсором  
4 FONT_COLOR  STRING  Основной цвет шрифта строки  
5 SELECTED_FONT_COLOR  STRING  Цвет шрифта, когда строка выделена курсором  
 

 
 59 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Цвет фона (подсветки) задается макросом «RGB(<red>, <green>, <blue>)». Например, если  
в качестве параметра цвета передадите  в функцию строку «RGB(255, 0, 0)», то цвет 
подсветки установится  в красный. Для  использования системного цвета  по умолчанию 
используйте строку «DEFAULT_COLOR».  
Пример : 
‘ 
SET_ROW_COLOR_EX (10, "DEFAULT_COLOR ", "DEFAULT_COLOR ", "RGB(0,255,0) ", 
"RGB(0,0,255) ") 
‘ 
 
Основной цвет шрифта для 10 -й строки таблицы устанавливается  в зеленый . При выделении 
её курсором цвет шри фта станет синим.  
8.12  Функции для получения значений Таблицы 
текущих торгов  
8.12.1  GET_PARAM  
Функция предназначена для получения значения параметров биржевой информации.  
С помощью этой функции можно получить данные  из Таблицы текущих торгов  для з аданных 
кодов класса  и инструмента . 
GET_PARAM (STRING classcode_list, STRING seccode, STRING param_name)  
Параметры:  
№ Параметр  Тип Описание  
1 CLASSCODE_LIST  STRING  Список кодов классов инструментов , в которых будет искаться 
инструмен т через зап ятую. Например, если  в функцию передается 
строка « TQBR,TQBS,TQNL», то инструмент  будет искаться  в классах 
«А1-Акции», «А2 -Акции»  и «Б-Акции»  
2 SECCODE  STRING  Код инструмента  
3 PARAM_NAME  STRING  Идентификатор параметра  
 
Пример:  
‘ 
LastPrice = GET_PARAM ( "TQBR", "HYDR", "last") 
‘ 
 

 
 60 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Переменной «LastPrice» присваивается значение цены последней сделки для « РусГидро » 
из класса «А1 -Акции Московской Биржи ». 
8.12.2  GET_PARAM_ EX 
Функция предназначена для получения значений всех параметров биржевой информации  
из Таблицы тек ущих торгов . С помощью этой функции можно получить любое  из значений 
Таблицы текущих торгов  для заданных кодов класса  и инструмента . 
MAP GET_PARAM_EX (STRING classcode, STRING seccode, STRING param_name)  
Если в коде программы и спользуется команда USE_CASE _SENSITIVE _CONSTANTS  
(см. п. 8.3.2), то значения параметров «classcode» и «seccode» должны быть указаны 
в регистре, которому они соответствуют в Таблице текущих торгов , а значение параметра 
«param_name» должно быть указа но в верхнем регистре.  
Параметры:  
№ Параметр  Тип Описание  
1 CLASSCODE  STRING  Код класса  
2 SECCODE  STRING  Код инструмента  
3 PARAM _NAME  STRING  Идентификатор параметра  
 
«MAP» имеет структуру:  
№ Параметр  Тип Описание  
1 RESULT  DOUBLE  Результат выполнения о перации . Возможные значения:  
 «0» – ошибка ; 
 «1» – параметр найден  
2 PARAM _TYPE DOUBLE  Тип данных параметра, используемый  в Таблице текущих торгов . 
Возможные значения:  
 «1» – DOUBLE ; 
 «2» – LONG ; 
 «3» – CHAR ; 
 «4» – перечислимый тип ; 
 «5» – время ; 
 «6» – дата 
3 PARAM_VALUE  DOUBLE  Значение параметра. Для строк ( param_type = 3 ) значение равно «0» . 
Для перечислимых типов значение равно порядковому значению 
перечисления  
4 PARAM_IMAGE  STRING  Строковое значение параметра, аналогичное его представлению  
в таблице . В строковом представлении учитываются разделители 
разрядов, разделители целой  и дробной части. Для перечислимых типов 
выводятся соответствующие им строковые знач ения 

 
 61 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
Пример:  
‘ 
PARMAP=GET_PARAM_EX( "TQBR","RTKM","WAPRICE") 
WAPRICE=GET_VALUE(PARMAP, "PARAM_VALUE ") 
‘ 
 
Переменной « WAPRICE » присваивается значение средневзвешенной цены  по обыкновенным 
акциям «Ростелекома»  из класса «А1 -Акции Московской Биржи ». 
8.12.3  Значения параметров функций  
Список возможных кодов классов инструментов  «classcode_list»:  
Код класса  Назван ие 
TQBR МБ ФР: Т+ А1-Акции , паи и РДР  
TQBS МБ ФР: Т+ А2-Акции  и паи  
TQNL МБ ФР: Т+ Б-Акции  и паи  
TQOB МБ ФР: Т+ А1-Облигации  
TQOS МБ ФР: Т+ А2-Облигации  
TQNO МБ ФР: Т+ Б-Облигации  
PSEQ  МБ ФР: РПС: А1 -Акции  и паи  
PSES МБ ФР: РПС: А2 -Акции  и паи  
PSNL МБ ФР: РПС: Б -Акции  и паи  
PSOB  МБ ФР: РПС: А1 -Облигации  
PSNO  МБ ФР: РПС: Б -Облигации  
PSAU  МБ ФР: РПС: Первичное 
размещение (облигаци и) 
AUCT  МБ ФР: Аукцион (Акции)  
MAIN  МБ ГЦБ  
MAIC  ГЦБ: период закрытия  
BOBR  МБ ГЦБ: Облигации ЦБ  
FUOP  Фьючерсы ММВБ  Код класса  Назван ие 
GAZP  Облигации Газпром  
INDX МБ ФР: Индексы  
GTS РТС: СГК 
GAZ РТС: Акции Газпрома  
QUADRO  РТС-СГК (Торги  в валюте)  
RTS10  РТС: Рынок «Десяти»  
RTSIDX  Индексы РТС  
RTSIND  РТС (Индексы)  
SES2 ГЦБ: Крупные лоты  
SPBFUT  Фьючерсы FORTS  
SPBOPT  Опционы FORTS  
SPBSPT  Спот Санкт -Петербург  
SPBGKO  МКО 
SPBCEX  ГГКО на Петербургской валютной 
бирже  
SPCGKO  Тестовая система на СПВБ  
EQBREMU  Акции 1 -го уровня (Эмулятор)  
USDRUB Курс доллара на FORTS  

 
 62 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
Список возможных идентификаторов параметров:  
№ Параметр  Тип Описани е 
1 STATUS  STRING  Статус  
2 LOTSIZE  NUMERIC  Размер лота  
3 BID NUMERIC  Лучшая цена спроса  
4 BIDDEPTH  NUMERIC  Спрос  по лучшей цене  
5 BIDDEPTHT  NUMERIC  Суммарный спрос  
6 NUMBIDS  NUMERIC  Количество заявок на покупку  
7 OFFER  NUMERIC  Лучшая цена предложени я 
8 OFFERDEPTH  NUMERIC  Предложение  по лучшей цене  
9 OFFERDEPTHT  NUMERIC  Суммарное предложение  
10 NUMOFFERS  NUMERIC  Количество заявок на продажу  
11 OPEN  NUMERIC  Цена открытия  
12 HIGH  NUMERIC  Максимальная цена сделки  
13 LOW NUMERIC  Минимальная цена сде лки 
14 LAST NUMERIC  Цена последней сделки  
15 CHANGE  NUMERIC  Разница цены последней к предыдущей сессии  
16 QTY NUMERIC  Количество инструментов в последней сделке  
17 TIME STRING  Время последней сделки  
18 VOLTODAY  NUMERIC  Количество инструментов в обезли ченных сделках  
19 VALTODAY  NUMERIC  Оборот  в деньгах  
20 TRADIN GSTATUS  STRING  Состояние сессии  
21 VALUE  NUMERIC  Оборот  в деньгах последней сделки  
22 WAPRICE  NUMERIC  Средневзвешенная цена  
23 HIGHBID  NUMERIC  Лучшая цена спроса сегодня  
24 LOWOFFER  NUMERIC  Лучшая цена предложения сегодня  
25 NUMTRADES  NUMERIC  Количество сделок за сегодня  
26 PREVPRICE  NUMERIC  Цена закрытия  

 
 63 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описани е 
27 PREVWAPRICE  NUMERIC  Предыдущая оценка  
28 CLOSEPRICE  NUMERIC  Цена периода закрытия  
29 LASTCHANGE  NUMERIC  % изменения от закрытия  
30 PRIMARYDIST  STRING  Размещение  
31 ACCRUEDINT  NUMERIC  Накопленный купонный доход  
32 YIELD  NUMERIC  Доходность последней сделки  
33 COUPO NVALUE  NUMERIC  Размер купона  
34 YIELDA TPREVWAPRI  NUMERIC  Доходность  по предыдущей оценке  
35 YIELDA TWAPRICE  NUMERIC  Доходность  по оценке  
36 PRICEM INUSPREVWAPRICE  NUMERIC  Разница цены последней к предыдущей оценке  
37 CLOSEYIELD  NUMERIC  Доходность закрытия  
38 CURREN TVALUE  NUMERIC  Текущее значение индексов Московской Биржи  
39 LASTVALUE  NUMERIC  Значение индексов Московско й Биржи на закрытие 
предыдущего дня  
40 LASTT OPREVSTLPRC  NUMERIC  Разница цены последней к предыдущей сессии  
41 PREVSETTLEPRICE  NUMERIC  Предыдущая расчетная цена  
42 PRICEMVTLIMIT  NUMERIC  Лимит изменения цены  
43 PRICEMVTLIMITT1  NUMERIC  Лимит изменения цен ы T1 
44 MAXOU TVOLUME  NUMERIC  Лимит объема активных заявок (в контрактах)  
45 PRICEMAX  NUMERIC  Максимально возможная цена  
46 PRICEMIN  NUMERIC  Минимально возможная цена  
47 NEGVALTODAY  NUMERIC  Оборот внесистемных  в деньгах  
48 NEGNU MTRADES  NUMERIC  Количест во внесистемных сделок за сегодня  
49 NUMCO NTRACTS  NUMERIC  Количество открытых позиций  
50 CLOSETIME  STRING  Время закрытия предыдущих торгов (для индексов 
РТС) 
51 OPENVAL  NUMERIC  Значение индекса РТС на момент открытия торгов  
52 CHNGOPEN  NUMERIC  Изменени е текущего индекса РТС  по сравнению  
со значением откр ытия 
53 CHNGCLOSE  NUMERIC  Изменение текущего индекса РТС  по сравнению  
со значением закр ытия 

 
 64 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описани е 
54 BUYDEPO  NUMERIC  Гарантийное обеспечение продавца  
55 SELLDEPO  NUMERIC  Гарантийное обеспечение покупателя  
56 CHANGETIME  STRING  Время последнего изменения  
57 SELLPROFIT  NUMERIC  Доходность продажи  
58 BUYPROFIT  NUMERIC  Доходность покупки  
59 TRADECHANGE  NUMERIC  Разница цены последней к предыдущей сделки (FORTS, 
ФБ СПБ, СПВБ)  
60 FACEVALUE  NUMERIC  Номинал (для инструментов СПВБ)  
61 MARKETPRICE  NUMERIC  Рыночная цена вчера  
62 MARKE TPRICETODAY  NUMERIC  Рыночная цена  
63 NEXTCOUPON  NUMERIC  Дата выплаты купона  
64 BUYBAC KPRICE  NUMERIC  Цена оферты  
65 BUYBAC KDATE  NUMERIC  Дата оферты  
66 ISSUESIZE  NUMERIC  Объем обращен ия 
67 PREVDATE  NUMERIC  Дата предыдущего торгового дня  
68 DURATION  NUMERIC  Дюрация  
69 LOPENPRICE  NUMERIC  Официальная цена открытия  
70 LCURREN TPRICE  NUMERIC  Официальная текущая цена  
71 LCLOSEPRICE  NUMERIC  Официальная цена закрытия  
72 QUOTEBASIS  STRING  Тип цены  
73 PREVADMI TTEDQUOT  NUMERIC  Признаваемая котировка предыдущего дня  
74 LASTBID  NUMERIC  Лучшая цена спроса на момент завершения периода 
торгов  
75 LASTOFFER  NUMERIC  Лучшая цена предложения на момент завершения 
торгов  
76 PREVLEGA LCLOSEPR  NUMERIC  Цена закрытия предыдущего дня  
77 COUPONP ERIOD  NUMERIC  Длительность купона  
78 MARKE TPRICE2  NUMERIC  Рыночная цена 2  
79 ADMITTE DQUOTE  NUMERIC  Признаваемая котировка  
80 BGOP  NUMERIC  БГО по покрытым позициям  

 
 65 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описани е 
81 BGONP  NUMERIC  БГО по непокрытым позициям  
82 STRIKE  NUMERIC  Цена страйк  
83 STEPPRICET  NUMERIC  Стоимость шага цены  
84 STEPPRICE  NUMERIC  Стоимость шага цены (для новых контрактов FORTS ) 
85 SETTLEPRICE  NUMERIC  Расчетная цена  
86 OPTIONTYPE  STRING  Тип опциона  
87 OPTIONBASE  STRING  Базовый актив  
88 VOLATILITY  NUMERIC  Волатильность опциона  
89 THEORPRICE  NUMERIC  Теоретическая цена  
90 PERCENTRATE  NUMERIC  Агрегированная ставка  
91 ISPERCENT  STRING  Тип цены фьючерса  
92 CLSTATE  STRING  Статус клиринга  
93 CLPRICE  NUMERIC  Котировка последнего клиринга  
94 STARTTIME  STRING  Начало основной сессии  
95 ENDTIME  STRING  Окончание основной сессии  
96 EVNSTAR TTIME STRING  Начало вечерней сессии  
97 EVNENDTIME  STRING  Окончание вечерней сессии  
98 MONSTAR TTIME STRING  Начало утренней сессии  
99 MONEN DTIME STRING  Окончание  утренней сессии  
100 CURSTE PPRICE  STRING  Валюта шага цены  
101 REALVMPRICE  NUMERIC  Текущая рыночная котировка  
102 MARG  STRING  Маржируемый  
103 EXPDATE  NUMERIC  Дата исполнения инструмента  
104 CROSSRATE  NUMERIC  Курс 
105 BASEPRICE  NUMERIC  Базовый курс  
106 HIGHVAL  NUMERIC  Максимальное значение (RTSIND)  
107 LOWVAL  NUMERIC  Минимальное значение (RTSIND)  
108 ICHANGE  NUMERIC  Изменение (RTSIND)  
109 IOPEN  NUMERIC  Значение на момент открытия (RTSIND)  

 
 66 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описани е 
110 PCHANGE  NUMERIC  Процент изменения (RTSIND)  
111 OPENPERI ODPRICE  NUMERIC  Цена предторгового периода  
112 MIN_CURR_LAST  NUMERIC  Минимальная текущая цена  
113 SETTLECODE  STRING  Код расчетов  по умолчанию  
114 STEPPRICECL  DOUBLE  Стоимость шага цены для клиринга  
115 STEPPRICEPRCL  DOUBLE  Стоимость шага цены для промк лиринга  
116 MIN_CURR_LAST_TI  STRING  Время изменения минимальной текущей цены  
117 PREVLOTSIZE  NUMERIC  Предыдущее значение размера лота  
118 LOTSIZECHANGEDAT  NUMERIC  Дата последнего изменения размера лота  
119 AUCTPRICE  NUMERIC  Цена послеторгового аукциона  
120 CLOSING_AUCTION_VOLUME  NUMERIC  Количество в  сделках послеторгового аукциона  
 
Список идентификаторов дополнительных параметров, доступных для функции GET_PARAM_EX:  
№ Параметр  Тип Описание  
1 LONGNAME  STRING  Полное название инструмента  
2 SHOR TNAME  STRING Краткое название инструмента  
3 CODE  STRING  Код инструмента  
4 CLASSNAME  STRING  Название класса  
5 CLASS_CODE  STRING  Код класса  
6 TRADE_DATE_CODE  DOUBLE  Дата торгов  
7 MAT_DATE  DOUBLE  Дата погашения  
8 DAYS_TO_MAT_DATE  DOUBLE  Число дней  до погашения  
9 SEC_FACE_VALUE  DOUBLE  Номинал инструмента  
10 SEC_FACE_UNIT  STRING  Валюта номинала  
11 SEC_SCALE  DOUBLE  Точность цены  
12 SEC_PRICE_STEP  DOUBLE  Минимальный шаг цены  
13 SECTYPE  STRING  Тип инструмента  
 

 
 67 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.13  Функции для получения значений Окна 
котировок  
8.13.1  GET_Q UOTES_II_LEVEL_DATA  
Функция предназначена для получения значений котировок инструментов.  С помощью этой 
функции можно получить данные  из Таблицы котировок для заданных кодов класса  
и инструмента . 
MAP GET_QUOTES_II_LEVEL_DATA (STRING ClassCode, STRING SecCo de) 
Возвращаемый « MAP» имеет следующую структуру:  
№ Параметр  Тип Описание  
1 BID_COUNT  DOUBLE  Количество котировок покупки  
2 OFFER_COUNT  DOUBLE  Количество котировок продажи  
3 BID COLLECTION  Котировки спроса (покупки)  
4 OFFER COLLECTION  Котировки предлож ений (продажи)  
 
Коллекции «BID»  и «OFFER» имеют следующую структуру:  
№ Параметр  Тип Описание  
1 PRICE  DOUBLE  Цена покупки / продажи  
2 QUANTITY  DOUBLE  Количество  в лотах  
 
8.14  Функции для получения значений таблицы 
«Позиции по инструментам»  
Функции предназнач ены для получения значений таблицы для заданного кода клиента, код а 
фирмы, кода инструмента  и счета депо.  
8.14.1  DEPO _OPEN _BALANCE  
Возвращает значение «Входящего остатка  по инструментам ». 
DEPO_OPEN_BALANCE (STRING client_code, STRING firmid, STRING seccode, 
STRIN G account)  

 
 68 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.14.2  DEPO _OPEN _LIMIT  
Возвращает значение «Входящего лимита  по инструментам ». 
DEPO_OPEN_LIMIT (STRING client_code, STRING firmid, STRING seccode, 
STRING  account)  
8.14.3  DEPO _CURRENT _BALANCE  
Возвращает значение «Текущего остатка  по инструментам ». 
DEPO_CURRENT _BALANCE (STRING client_code, STRING firmid, STRING seccode, 
STRING  account)  
8.14.4  DEPO _CURRENT _LIMIT  
Возвращает значение «Текущего лимита  по инструментам ». 
DEPO_CURRENT_LIMIT (STRING client_code, STRING firmid, STRING seccode, STRING 
account)  
8.14.5  DEPO _LIMIT_AVAILAB LE 
Возвращает значение доступного количества инструментов . 
DEPO_LIMIT_AVAILABLE (STRING client_code, STRING firmid, STRING seccode, STRING 
account)  
8.14.6  DEPO _LIMIT_LOCKED  
Возвращает значение «Заблокированного количества инструментов ». 
DEPO_LIMIT_LOCKED (STRING client_code, STRING firmid, STRING seccode, 
STRING  account)  
8.14.7  DEPO_LIMIT_LOCKED_BUY  
Возвращает значение «Заблокированного на покупку количества лотов».  
DEPO_LIMIT_LOCKED_BUY (STRING client_code, STRING firmid, STRING seccode, 
STRING account)  
8.14.8  DEPO_LIMIT_LOCKE D_BUY_VALUE  
Возвращает значение «Стоимости инструментов , заблокированных на покупку».  
DEPO_LIMIT_LOCKED_BUY_VALUE (STRING client_code, STRING firmid, STRING  seccode, 
STRING account)  

 
 69 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Параметры:  
№ Параметр  Тип Описание  
1 CLIENT_CODE  STRING  Код клиента  
2 FIRMID  STRING  Код фирмы  
3 SECCODE  STRING  Код инструмента  
4 ACCOUNT  STRING  Счет депо  
 
Параметр « account » должен указываться  с соблюдением регистра символов 
(вер хнего/нижнего).  
 
Пример : 
‘ 
ClDepoOB = DEPO_OPEN_BALANCE ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00") 
ClDepoOL = DEPO_OPEN_LIMIT ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00 ") 
ClDepoСB = DEPO_CURRENT_BALANCE ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00 ") 
ClDepoCL = DEPO_CURRENT_LIMIT ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00 ") 
ClDepoAV = DEPO_LIMIT_AVAILABLE ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00 ") 
ClDepoLCK = DEPO_LIMIT_LOCKED ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00 ") 
ClDepoLCKBuy = DEPO_LIMIT_LOCKED_BUY ( "1075", "NC0080000000 ", "HYDR", "L01-00000F00 ") 
ClDepoLCKBuyValue = D EPO_LIMIT_LOCKED_BUY_VALUE ( "1075", "NC0080000000 ", "HYDR", 
"L01-00000F00 ") 
 ‘ 
 
В примере показано присвоение переменным значений таблицы «Позиции по инструментам»  
для клиента с кодом «1075»  по обыкновенным акциям «Р усГидро »: 
• переменной «ClDepoOB» присваив ается значение входящего остатка ; 
• переменной «ClDepoOL» присваивается значение входящего лимита ; 
• переменной «ClDepoCB» присваивается значение текущего остатка ; 
• переменной «ClDepoCL» присваивается значение текущего лимита ; 
• переменной «ClDepoAV» присваиваетс я значение доступного количества инструментов ; 
• переменной «ClDepoLCK» присваивается значение заблокированного количес тва 
инструментов ; 
• переменной «ClDepoLCKBuy» присваивается значение заблокированного на покупку 
количества лотов ; 
• переменной  «ClDepoLCKBuyVa lue» присваивается значение стоимости инструментов , 
заблок ированных на покупку.  

 
 70 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.15  Функции для получения значений таблицы 
«Позиции по деньгам»  
Функции предназначены для получения значений таблицы для заданного кода клиента, к ода 
фирмы, кода позиции  и кода вал юты. 
8.15.1  MONEY_ OPEN _BALANCE  
Возвращает значение «Входящего остатка  по денежным средствам».  
MONEY_OPEN_BALANCE (STRING client_code, STRING firmid, STRING tag, 
STRING  curr_code)  
8.15.2  MONEY_OPEN_LIMIT  
Возвращает значение «Входящего лимита  по денежным средствам».  
MONEY _OPEN_LIMIT (STRING client_code, STRING firmid, STRING tag, 
STRING  curr_code)  
8.15.3  MONEY_CURRENT_BALANCE  
Возвращает значение «Текущего остатка  по денежным средствам».  
MONEY_CURRENT_BALANCE (STRING client_code, STRING firmid, STRING tag, STRING 
curr_code)  
8.15.4  MONEY_ CURRENT_LIMIT  
Возвращает значение «Текущего лимита  по денежным средствам».  
MONEY_CURRENT_LIMIT (STRING client_code, STRING firmid, STRING tag, 
STRING  curr_code)  
8.15.5  MONEY_LIMIT_AVAILABLE  
Возвращает значение «Доступного количества денежных средств».  
MONEY_LIMIT _AVAILABLE (STRING client_code, STRING firmid, STRING tag, 
STRING  curr_code)  
8.15.6  MONEY_LIMIT_LOCKED  
Возвращает значение «Заблокированного количества денежных средств.  

 
 71 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 MONEY_LIMIT_LOCKED (STRING client_code, STRING firmid, STRING tag, 
STRING  curr_code)  
Пример : 
‘ 
ClMoneyOB = MONEY_OPEN_BALANCE ( "1075", "NC0080000000 ", "EQTV", "SUR") 
ClMoneyOL = MONEY_OPEN_LIMIT ( "1075", "NC0080000000 ", "EQTV", "SUR") 
ClMoneyCB = MONEY_CURRENT_BALANCE ( "1075", "NC0080000000 ", "EQTV", "SUR") 
ClMoneyCL = MONEY_CURRENT_LIMIT ( "1075", "NC0080000000 ", "EQTV", "SUR") 
ClMoneyAV = MONEY_LIMIT_AVAILABLE ( "1075", "NC0080000000 ", "EQTV", "SUR") 
ClMoneyLCK = MONEY_LIMIT_LOCKED ( "1075", "NC0080000000 ", "EQTV", "SUR") 
‘ 
 
В примере показано присвоение переменным значений таблицы «Позиции по деньг ам» на 
Фондовой Московской Бирже для клиента  с кодом «1075»:  
• переменной «ClMoneyOB» присваивается значение входящего остатка  по денежным 
средствам ; 
• переменной «ClMoneyOL» присваивается значение входящего лимита  по денежным 
средствам ; 
• переменной «ClMoneyCB»  присваивается значение текущего остатка  по денежным 
средствам ; 
• переменной «ClMoneyCL» присваивается значение текущего лимита  по денежным 
средствам ; 
• переменной «ClMoneyAV» присваивается значение доступного количества денежных 
средств ; 
• переменной «ClMoneyLC K» присваивается значение заблокированного количества 
денежных средств.  
8.16  Функции расчета маржинальных позиций  
Функции предназначены для получения значений маржинальных позиций для заданного 
кода клиента, кода фирмы, кода класса, счета депо  и кода параметра цены,  по которой идет 
расчет стоимости (например «OPEN» – цена открытия, «LAST» – цена последней сделки  
и т.п.).  
8.16.1  SHORT_VALUE  
Возвращает значение «Стоимости всех коротких позиций».  
SHORT_VALUE (STRING client_code, STRING firmid, STRING seccode , 
STRING  class_code, STRING account, STRING price_param_code)  

 
 72 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.16.2  LONG_VALUE  
Возвращает значение «Стоимости всех длинных позиций».  
LONG_VALUE (STRING client_code, STRING firmid, STRING seccode , STRING  class_code, 
STRING account, STRING price_param_code)  
Параметры:  
№ Парамет р Тип Описание  
1 CLIENT_CODE  STRING  Код клиента  
2 FIRMID  STRING  Код фирмы  
3 SECCODE  STRING  Код инструмента  
4 CLASS_CODE  STRING  Код класса  
5 *ACCOUNT  STRING  Счет депо  
6 PRICE_PARAM_CODE  STRING  Код параметра цены  
 
(*) параметр чувствителен к верхнему/ нижнему регистру си мволов.  
 
Пример : 
‘ 
ClShortsValue = SHORT_VALUE ( "1075", "NC0080000000 ", "HYDR", "TQBR", "L01-00000F00 ", 
"LAST") 
ClLongsValue = LONG_VALUE ( "1075", "NC0080000000 ", "HYDRR", "TQBR", "L01-00000F00 ", 
"OPEN") 
‘ 
 
Переменной «ClShortsValue» при сваивается значение стоимости всех коротких позиций для  
клиента  с кодом «1075»  по инструменту « РусГидро » из класса «А1 -Акции»  по счету «L01 -
00000F00», и сходя из цены последней сделки.  
Переменной ClLongsValue присваивается значение стоимости всех длинных по зиций для 
клиента с кодом «1075»  по инструменту « РусГидро » из класса «А1 -Акции»  по счету  «L01-
00000F00 », исходя из цены открытия.  

 
 73 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.17  Функции получения значений таблиц 
«Клиентский портфель»  и «Купить/Продать»  
Функции предназначены для получения значений указан ных таблиц. Значения этих таблиц 
вычисляются на рабочем месте клиента QUIK  с периодичностью, установленной  
в настройках (пункт меню Система/ Настройки /Основные  настройки …, раздел 
«Торговля » / «Клиентский портфель» , флажок «Обновлять через каждые .. секунд») . 
8.17.1  GET_CLIENT_MARGINAL_PORTFOLIO_INFO  
Функция возвращает ассоциативный массив (MAP)  с параметрами таблицы «Клиентский 
портфель», соответствующих идентификатору участника торгов «firmid»  и коду клиента 
«client_code».  
MAP GET_CLIENT_MARGINAL_PORTFOLIO_INFO (S TRING firmid, STRING  client_code)  
Параметры:  
№ Параметр  Тип Описание   
1 IS_LEVERAGE  STRING 
(12) Признак использования схемы 
кредитования  с контролем текущей 
стоимости активов. Возможные значения:  
 «МЛ» – используется схема ведения 
позиции «по плечу», «плеч о» 
рассчита но по  значению Входящего 
лимита;  
 «МП» – используется схема ведения 
позиции «по плечу» , «плечо» указано 
явным образом;  
 «МОП» – используется схема ведения 
позиции «лимит на открытую 
позицию»;  
 «МД» – используется схема ведения 
позиции «по дисконтам »; 
 <пусто> – используется схема ведения 
позиции «по лимитам»  Тип клиента  
2 IN_ASSETS  DOUBLE  Оценка собственных средств клиента  
до начала то ргов Вход. акт ивы 
3 LEVERAGE  DOUBLE  Плечо. Если  не было задано явно, то 
отношение Входящего л имита к Входящим 
актив ам Плечо  
4 OPEN_LIMIT  DOUBLE  Оценка максимальной величины заемных 
средств  до начала то ргов Вход. л имит 

 
 74 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание   
5 VAL_SHORT  DOUBLE  Оценка стоимости коротких позиций. 
Значение всегда отр ицательное  Шорты  
6 VAL_LONG  DOUBLE  Оценка стоимости длинных позиций  Лонги  
7 VAL_LONG_MARGIN  DOUBLE  Оценка стоимости длинных позиций  
по маржинальным инструментам , 
принимаемым  в обеспечение  Лонги МО  
8 VAL_LONG_ASSET  DOUBLE  Оценка стоимости длинных позиций  
по немаржинальным инструментам , 
принимаемым  в обеспечение  Лонги О  
9 ASSETS  DOUBLE  Оценка собственных средств клиента  
по текущим позициям  и ценам Стоимость 
портфеля  
10 CUR_LEVERAGE  DOUBLE  Текущее плечо  Тек.Плечо  
11 MARGIN  DOUBLE  Уровень маржи,  в процентах  Ур. Маржи  
12 LIM_ALL  DOUBLE  Текущая оценка максимальной величины 
заемных с редств  Тек. Лимит  
13 AV_LIM_ALL  DOUBLE  Оценка величины заемных средств, 
доступных для дал ьнейшего открытия 
позиций  ДостТекЛимит  
14 LOCKED_BUY  DOUBLE  Оценка стоимости активов  в заявках на 
покупку  Блок. покупка  
15 LOCKED_BUY_MARGIN  DOUBLE  Оценка стоимости  активов  в заявках на 
покупку маржинальных инструментов , 
принимаемых  в обеспеч ение Блок. пок. 
маржин. 
16 LOCKED_BUY_ASSET  DOUBLE  Оценка стоимости активов  в заявках на 
покупку немаржинальных инструментов , 
принимаемых  в обесп ечение  Блок.пок. обесп.  
17 LOCK ED_SELL  DOUBLE  Оценка стоимости активов  в заявках на 
продажу ма ржинальных инструментов  Блок. продажа  
18 LOCKED_VALUE_COEF  DOUBLE  Оценка стоимости активов  в заявках на 
покупку н емаржинальных инструментов  Блок. пок. 
немарж.  
19 IN_ALL_ASSETS  DOUBLE  Оценка с тоимости всех позиций клиента  
в ценах закрытия предыдущей торговой 
сессии, включая позиции  
по немаржинальным инструментам  ВходСредства  
20 ALL_ASSETS  DOUBLE  Текущая оценка стоимости всех позиций 
клиента  ТекСредства  
21 PROFIT_LOSS  DOUBLE  Абсолютная величин а изменения стоимости 
всех позиций клиента  Прибыль/убытки  

 
 75 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание   
22 RATE_CHANGE  DOUBLE  Относительная величина изменения 
стоимости всех поз иций клиента  ПроцИзмен  
23 LIM_BUY  DOUBLE  Оценка денежных средств, доступных для 
покупки ма ржинальных инструментов  На покупк у 
24 LIM_SELL  DOUBLE  Оценка стоимости маржинальных 
инструментов , досту пных для  продажи  На продажу  
25 LIM_NON_MARGIN  DOUBLE  Оценка денежных средств, доступных для 
покупки н емаржинальных инструментов  НаПокупНеМаржин  
26 LIM_BUY_ASSET  DOUBLE  Оценка денежных  средств, доступных для 
покупки инструментов , принимаемых  
в обеспечение  НаПокупОбесп  
27 VAL_SHORT_NET  DOUBLE  Оценка стоимости коротких позиций . При 
расчете  не используется коэффициент 
диско нтирования* Шорты (нетто)  
28 VAL_LONG_NET  DOUBLE  Оценка стоимости  длинных позиций . При 
расчете  не используется коэффициент 
диско нтирования* Лонги (нетто)  
29 TOTAL_MONEY_BAL  DOUBLE  Сумма остатков  по денежным средствам  
по всем позициям , без учета средств, 
заблок ированных под исполнение 
обязательств, выраженная  в выбра нной 
валюте расчета  Сумма ден. 
остатков 
30 TOTAL_LOCKED_MONEY  DOUBLE  Cумма заблокированных средств  со всех 
денежных позиций  клиента, пересчитанная  
в валюту ра счетов через кросс -курсы на 
сервере  Суммарно заблок.  
31 HAIRCUTS  DOUBLE  Сумма дисконтов стоимости д линных 
(только  по инструментам  обеспечения)  
и коротких поз иций по инструментам , 
дисконтов корреляции между 
инструментами,  а также дисконтов на 
задолженности  по валютам,  не покрытые 
обеспечением  по инструментам  в этих же 
валютах Сумма дисконтов  
32 ASSETS_W ITHOUT_HC  DOUBLE  Суммарная величина денежных остатков, 
стоим ости длинных позиций  
по инструментам  обеспечения  и стоимости 
коротких позиций, без учета 
дисконт ирующих коэффициентов, без 
учета неттинга сто имости инструментов 
в рамках объединенной позиции  по 
инструментам и без учета корреляции 
между инстр ументами  ТекАктБезДиск  

 
 76 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание   
33 STATUS_COEF  DOUBLE  Отношение суммы дисконтов к текущим 
активам без учета дисконтов  Статус счета  
34 VARMARGIN  DOUBLE  Текущая вариационная маржа  по позициям 
клиента, по всем инструмента м Вариац. маржа  
35 GO_FOR_POSITIONS  DOUBLE  Размер денежных средств, уплаченных под 
все о ткрытые позиции на срочном рынке  ГО поз.  
36 GO_FOR_ORDERS  DOUBLE  Оценка стоимости активов  в заявках на 
срочном ры нке ГО заяв.  
37 RATE_FUTURES  DOUBLE  Отношение ликвид ационной стоимости 
портфеля к ГО  по срочному рынку  Активы/ГО  
38 IS_QUAL _CLIENT  STRING  Признак «квалифицированного» клиента, 
котор ому разрешено кредитование 
заемными средств ами с плечом 1:3. 
Возможные значения: «ПовышУрРиска» – 
квалифицирова нный, <пусто> – нет ПовышУрРиска  
39 IS_FUTURES  STRING  Счет клиента на FORTS,  в случае наличия 
объединенной позиции, иначе поле 
остается пустым  Сроч. счет  
40 CURR_TAG  STRING  Актуальные текущие параметры расчета 
для да нной строки  в формате «<Валюта> -
<Идентификатор то рговой сессии>». 
Пример: « SUR-EQTV » Парам. расч.  
 
(*) Подробнее о коэффициентах дисконтирования см. п. 7 Руководства  
по администрированию «Настройки Библиотеки  расчета лимитов ». 
 
Пример : 
‘ 
GET_CLIENT_MARGINAL _PORTFOLIO _INFO ("NC0080000000", "1")  
‘ 
 
8.17.2  GET_CLIENT _MARGINAL_PORTFOLIO_INFO_EX  
Функция возвращает ассоциативный массив (MAP) с  параметрами таблицы «Клиентский 
портфель», соответствующих идентификатору участника торгов «firmid», коду клиента 
«client_code» и сроку расчетов  «limit_kind». 

 
 77 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 MAP GET_CLIENT_MARGIN AL_PORTFOLIO_INFO_EX (STRING firmid, 
STRING  client_code, DOUBLE limit_kind)  
Возможные значения параметра «limit_kind»: 
— «0» – срок расчетов  «Т0»;  
— «1» – срок расчетов «Т1»;  
— «2» – срок расчетов «Т2»; 
— «365» – срок расчетов «Тx». 
Описание возвращаемых параметро в см. в п. 8.17.1 . 
Дополнительно возвращаются следующие параметры:  
№ Параметр  Тип Описание   
1 INIT_MARGIN  DOUBLE  Значение начальной маржи . 
Заполняется для клиентов типа «МД»  Нач.маржа  
2 MIN_MARGIN  DOUBLE  Значение минимальной маржи . 
Заполняется для клиентов типа «МД»  Мин.маржа  
3 CORRECTED_MARGIN  DOUBLE  Значение скорректированной маржи . 
Заполняется для клиентов типа «МД»  Скор.маржа  
4 CLIENT_TYPE  DOUBLE  Тип клиента  Тип клиента  
5 PORTFOLIO_VALUE  DOUB LE Стоимость портфеля.  
Для клиентов типа «МД» возвращается 
значение для строк с  максимальным 
сроком расчётов  limit_kind  Стоимость  
портфеля  
6 RCV1  DOUBLE  Норматив покрытия риска 1. 
Рассчитывается как разница 
параметров «Стоимость портфеля» и 
«Начальная мар жа». Для клиентов типа 
«МД» и «МД+»  НПР1  
7 RCV2  DOUBLE  Норматив покрытия риска 2. 
Рассчитывается как разница 
параметров «Стоимость портфеля» и 
«Минимальная маржа». Для клиентов 
типа «МД» и «МД+»  НПР2  
 
Пример : 
‘ 
GET_CLIENT_MARGINAL_PORTFOLIO_INFO_EX ("NC0 080000000", "1", "0")  
‘ 

 
 78 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
8.17.3  GET_CLIENT_MARGINAL_BUY_SELL_INFO  
Функция возвращает ассоциативный массив (MAP)  с параметрами таблицы 
«Купить/Продать», означающими возможность купить либо продать указанный инструмент 
«sec_code» класса «class_code», указанным клие нтом «client_code» фирмы «firmid»,  
по указанной цене «price». Если  цена равна  «0», то используются  лучшие  значения  
спроса /предложения . 
MAP GET_CLIENT_MARGINAL_BUY_SELL_INFO (STRING firmid, STRING  client_code, 
STRING class_code, STRING sec_code, DOUBLE pric e) 
Параметры:  
№ Параметр  Тип Описание  
1 IS_MARGIN_SEC  DOUBLE  Признак маржинальности инструмента. Возможные знач ения: 
«1» – маржинальная, «0» – не маржинальная . 
Не заполняется для клиентов типа «МД»  
2 IS_ASSET_SEC  DOUBLE  Принадлежность инструмента к списк у инструментов , 
принимаемых  в обеспечение. Во зможные значения:  
«1» – принимается  в обеспечение, «0» – не принимается  
в обеспеч ение. 
Не заполняется для клиентов типа «МД»  
3 BALANCE  DOUBLE  Текущая позиция  по инструменту,  в лотах  
4 CAN_BUY  DOUBLE  Оценка кол ичества лотов, доступных на покупку  по указанной 
цене* 
5 CAN_SELL  DOUBLE  Оценка количества лотов, доступных на продажу  по указанной 
цене* 
6 POSITION_VALUATION  DOUBLE  Денежная оценка позиции  по инструменту  по ценам 
спроса/предложения  
7 VALUE  DOUBLE  Оценк а стоимости позиции  по цене последней сделки  
8 OPEN_VALUE  DOUBLE  Оценка стоимости позиции клиента, рассчитанная  по цене 
закрытия предыдущей торг овой сессии  
9 LIM_LONG  DOUBLE  Предельный размер позиции  по данному инструменту, 
принимаемый  в обеспечение длин ных позиций  
10 LONG_COEF  DOUBLE  Коэффициент дисконтирования, применяемый для длинных 
позиций  по данному инс трументу  
11 LIM_SHORT  DOUBLE  Предельный размер короткой позиции  по данному инструменту  

 
 79 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  
12 SHORT_COEF  DOUBLE  Коэффициент дисконтирования, применяем ый для коротких 
позиций  по данному инс трументу  
13 VALUE_COEF  DOUBLE  Оценка стоимости позиции  по цене последней сделки,  с учетом 
дисконтирующих коэ ффициентов  
14 OPEN_VALUE_COEF  DOUBLE  Оценка стоимости позиции клиента, рассчитанная  по цене 
закрытия предыду щей торг овой сессии  с учетом 
дисконтирующих коэффициентов  
15 SHARE  DOUBLE  Процентное отношение стоимости позиции  по данному 
инструменту к сто имости всех активов клиента, рассчитанное  
по текущим ценам  
16 SHORT_WA_PRICE  DOUBLE  Средневзвешенная стоимость ко ротких позиций  
по инструментам  
17 LONG_WA_ PRICE DOUBLE  Средневзвешенная стоимость длинных позиций  
по инструментам  
18 PROFIT_LOSS  DOUBLE  Разница между средневзвешенной ценой приобретения 
инструментов и их рыночной оценки  
19 SPREAD_HC  DOUBLE  Коэффициент к орреляции между инструментами  
20 CAN_BUY_OWN  DOUBLE  Максимально возможное количество инструментов в заявке на 
покупку этого инстр умента  на этом классе на собственные 
средства клиента, исходя  из лучшей цены предл ожения  
21 CAN_SELL_OWN  DOUBLE  Максимально в озможное количество инструментов в заявке на 
продажу этого инстр умента на этом классе  из собственных 
активов клиента, исходя  из лучшей цены спроса  
22 IS_REST_SHORT_SEC  DOUBLE  Признак того, является ли инструмент разрешенным для 
продажи на  заемные средства . Возможные знач ения: 
«1» – разрешена, «0» – не разрешена.  
Не заполняется для клиентов типа «МД»  
 
(*) В зависимости от настроек сервера QUIK , величина может выр ажаться  
в лотах, либо  в штуках. Уточните единицу изме рения у  обслуживающего 
брокера.  
 
Пример : 
‘ 
GET_CLIENT_MARGINAL _BUY_SELL_INFO ("NC0080000000", "1", " TQBR", "HYDR", 0) 
‘ 
 

 
 80 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.17.4  GET_CLIENT_MARGINAL_BUY_SELL_INFO_EX  
Функция возвращает ассоциативный массив (MAP) с  параметрами таблицы 
«Купить/Продать», означающими возможность купить либо продать указанный инструмент 
«sec_code» класса «class_code», указанным клиентом «client_code» фирмы «firmid», 
по указанной цене «price». Если  цена равна  «0», то используются  лучшие  значения  
спроса /предложения . 
MAP GET_CLIENT_MARGINAL_BUY_SELL_INFO _EX (STRING firmid, 
STRING  client_code, STRING class_code, STRING sec_code, DOUBLE price)  
Описание возвращаемых параметров см. в п. 8.17. 3. 
Дополнительн о возвращаются следующие параметр ы: 
№ Параметр  Тип Описание  
1 LIMIT_KIND  DOUBLE  Срок расчётов . Возможные знач ения: 
 «0» – «Т0»;  
 «1» – «Т1»;  
 «2» – «Т2» 
2 D_LONG  DOUBLE  Эффективный начальный дисконт для длинной позиции. 
Заполняется для клиентов типа «МД»  
3 D_MIN_LONG  DOUBLE  Эффективный минимальный дисконт для длинной позиции. 
Заполняется для клиентов типа «МД»  
4 D_SHORT  DOUBLE  Эффективный начальный дисконт для короткой позиции. 
Заполняется для клиентов типа «МД»  
5 D_MIN_SHORT  DOUBLE  Эффективный минимальный дисконт для короткой позиции. 
Заполняется для клиентов типа «МД»  
6 CLIENT_TYPE  DOUBLE  Тип клиента  
7 IS_LONG_ALLOWED  DOUBLE  Признак того, является ли инструмент разрешенным  для 
покупки на  заемные средства. Возможные знач ения: 
«1» – разрешена, «0» – не разрешена.  
Заполняется для клиентов типа «МД»  
8 IS_SHORT _ALLOWED  DOUBLE  Признак того, является ли инструмент разрешенным  для 
продажи на  заемные средства. Возможные знач ения: 
«1» – разрешен а, «0» – не разрешена . 
Заполняется для клиентов типа «МД»  
 
Пример : 
‘ 
GET_CLIENT_MARGINAL _BUY_SELL_INFO_EX ("NC0080000000", "1", " TQBR", "HYDR", 0) 
‘ 
 

 
 81 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.18  Функции для работы  с файлами  
Функции предназначены для работы  с текстовыми файлами  и могут использоваться, 
например, для ведения журнала (log -файла) действий программы. Названия файлов могут 
содержать пути к ним, например «C:/QUIK/log/new.log».  
8.18.1  CLEAR_FILE  
Очищает указанный файл.  
MAP CLEAR_FILE (STRING target_file)  
Функция возвращает ассоциативный массив (MAP), содержащий параметры:  
№ Параметр  Тип Описание  
1 RESULT  DOUBLE  Результат выполнения операции. Возможные значения:  
«1» – выполнено у спешно, « 0» – произошла ошибка  
2 DESCRIPTION  STRING  Диагностика операционной системы  в случае ошибки  
 
8.18.2  WRITE  
Записывает  в конец файла «target_ file» строку «string_to_write».  
MAP WRITE (STRING target_file, STRING string_to_write)  
Функция возвращает ассоциативный м ассив (MAP), содержащий параметры:  
№ Параметр  Тип Описание  
1 RESULT  DOUBLE  Результат выполнения операции. Возможные значения:  
«1» – выполнено у спешно, «0» – произошла ошибка  
2 DESCRIPTION  STRING  Диагностика операционной системы  в случае ошибки  
 
8.18.3  WRITELN  
Записывает  в конец файла «target_file» строку «string_to_write»  с последующим переводом 
строки.  
MAP WRITELN (STRING target_file, STRING string_to_write)  

 
 82 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Функция возвращает ассоциативный массив (MAP), содержащий параметры:  
№ Параметр  Тип Описание  
1 RESULT  DOUBLE  Результат выполнения операции. Возможные значения:  
«1» – выполнено у спешно, «0» – произошла ошибка  
2 DESCRIPTION  STRING  Диагностика операционной системы  в случае ошибки  
 
Пример : 
‘ 
CLEAR_FILE ( "new.log") 
WRITE ("new.log","Hello, ") 
WRITELN ( "new.log","world") 
‘ 
 
8.18.4  GET_FILE_LEN  
Возвращает количество строк  в файле « target _file». Если такого файла  не существует, 
возвр ащает « -1». 
DOUBLE  GET_FILE_LEN (STRING target_file)  
8.18.5  READ _LINE  
Функция считывает  из файла « target _file» и возвращает строку под номером « line». Длина 
строки не должна превышать 1000 символов, строки большей длины при считывании будут 
обрез аны. 
STRING   READ_LINE (STRING target_f ile, DOUBLE line, DOUBLE error)  
«error» – возвращаемый результат выполнения операции. Если значение равно «0», то 
чтение прошло успешно; «1»  – произошла ошибк а, «2»  – достигнут конец файла.  
Пример : 
‘ 
WRITELN ( "new.log","Hello, world ") 
msg = READ_LINE ("new.log", GET_FILE_LEN("new.log"), error)  
MESSAGE (msg,1) 
‘ 
 

 
 83 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.19  Функции для работы  со строками  
8.19.1  LEN 
Возвращает длин у строко вой переменной «value».  
DOUBLE  LEN (STRING value ) 
8.19.2  TRIM  
Обрезает пробелы  в начале  и в конце строки.  
STRING   TRIM (STRING value ) 
Функция возвращает строку без пустых символов  в начале  и в конце строки.  
8.19.3  SUBSTR  
Возвращает подстроку  из строки «value», начиная  с символа  с номером «start»  и длиной 
«len». 
STRING   SUBSTR (STRING v alue, DOUBLE start, DOUBLE len)  
8.19.4  FIND  
Ищет вхождение подстроки  в заданную строку.  
DOUBLE  FIND (STRING value, DOUBLE start, STRING sub) 
Функция возвращает позицию первого вхождения подстроки «sub» в строке « value », 
начиная  с позиции «start». Если подстрока  не найдена, функция возвращает результат « -1». 
Пример:  
‘ 
stroka="anymessage " 
stroka2=SUBSTR(stroka, FIND(stroka, 1, "message"), LEN("message"))  
MESSAGE (stroka 2,2) 
‘ 
 

 
 84 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.20  Функции для работы  с графиками  
8.20.1  GET_CANDLE  
Функция для обращения к данным «свечек» на графике,  а также к значениям индикаторов 
технического анализа.  
MAP GET_CANDLE (STRING class_code, STRING sec_code, STRING  parameter_name, 
STRING interval, STRING graph_type, DOUBLE Date, DOUBLE  Time)  
Функция возвращает ассоциативный массив ( MAP), содержащий информацию о ценах  
в момент времени «Date»« Time», для графика, построенного  по инструменту  с кодом 
«sec_code» из класса  с кодом « class_code» с временным интервалом « interval ». Если 
«class_code» равен «», то фун кция ищет « sec_code» по всем классам  до первого 
нахождения.  
Тип графи ка указывается следующим кодом:  
Тип графика  Код 
PRICE  1 
VOLUME  2 
MOVING AVERAGE  3 
PRICE OSCILLATOR  4 
MACD  5 
STANDARD DEV  6 
BOLLINGER LINES  7 
STOCHASTIC  8 
RSI 9 Тип графика  Код 
PARABOLIC SAR  10 
SROC  11 
MOM 12 
ROC 13 
MFI 16 
WILLIAMS %R  17 
ENVELOPS  18 
VOLUME OSCILLATOR  19 
BALANCE VOLUME  20 Тип графика  Код 
CUM AD  21 
CHAIKIN OSCILLATOR  22 
CUM WAD  23 
ELDER FI  24 
ELDER RAY  25 
VERTICAL HORIZONTAL 
FILTER  26 
CHAIKIN VOLATILITY  27 
 
Значение временного интервала «interval» можно задавать следующими числовыми 
величин ами: 
Величина  
инте рвала  Значение  
Месячный  month  
-3 
Недельный  week Величина  
инте рвала  Значение  
-2 
Дневной  day 
-1 Величина  
инте рвала  Значение  
Тиковый  0 
1 минута  1 
2 минуты  2 

 
 85 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Величина  
инте рвала  Значение  
3 минуты  3 
4 минуты  4 
5 минут  5 
6 минут  6 
10 минут  10 Величина  
инте рвала  Значение  
15 минут  15 
20 минут  20 
30 минут  30 
60 минут  60 
2 часа  120 Величина  
инте рвала  Значение  
4 часа  240 
 
Значение «parameter_name» должно соответствовать одному  из значений имени параметра  
из Таблицы текущих торгов,  перечень см . в п. 8.12. Если «parameter_name» ук азан как «», 
то поиск осуществляется  по данным Таблицы обезличенных  сделок. 
Значение даты «Date» нужно указывать  в формате « ГГГГММДД ». Например, «20050527» 
означает 27 мая 2005 г. Значение времени «Time» нужно указыват ь в формате « ЧЧММСС ». 
Например, «163500» означает 16 ч. 35 мин.  
Функция возвращает ассоциативный массив (MAP), содержащий параметры:  
№ Параметр  Тип Описание  
1 OPEN  DOUBLE  Цена открытия (первой сделки)  в данном интервале времени  
2 CLOSE  DOUBLE  Цена закрыт ия (последней сделки)  в интервале  
3 HIGH  DOUBLE  Наибольшая цена сделки  в интервале  
4 LOW DOUBLE  Наименьшая цена сделки  в интервале  
5 VOLUME  DOUBLE  Суммарный объем сделок  в интервале  
 
Пример : 
‘ 
msg = GET_CANDLE(" TQBR", "HYDR", "", "5", "PRICE", 20 101130, 103500)  
MESSAGE(msg , 2) 
‘ 
 

 
 86 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.20.2  GET_CANDLE _EX 
В некоторых случаях, например, когда индикатор технического анализа состоит  
из нескольких линий, применение функции GET_CANDLE  невозможно. Для доступа к таким 
индикаторам средствами языка QPILE  применяется функция  GET_CANDLE _EX. 
MAP GET_CANDLE_EX (STRING Tag, DOUBLE Date, DOUBLE Time)  
Функция возвращает ассоциативный массив ( MAP) с данными для графика  со строковым 
идентификатором Tag в момент времени « Date» и «Time». Таким образом, для того чтобы 
обратит ься к данны м на графике, необходимо его предварительно построить  и присвоить 
ему уникал ьный строковый идентификатор Tag. Идентификатор Tag задается  в диалоге 
«Редактирование н астро ек граф ика» на вкладке «Дополнительно» (см. п. 4.2. 3 Раздел а 4 
«Работа с графиками» ). 
При вызове функции значение даты « Date» нужно указывать  в формате « ГГГГММДД ». 
Например, «20050527» означает 27 мая 2005 г. Значение времени « Time» нужно указывать  
в формате « ЧЧММСС ». Например, «163500»  означает 16 ч. 35 мин. Ф ункция округляет 
параметр « Time» до ближайшего меньшего значения времени, соответствующе го интервалу 
графика . Например, если интервал графика — «5 минут»,  а значение параметра « Time» — 
«163700», то  функция округлит значения параметр « Time» до «163500»,  а если интервал 
графика – «60 минут», то  «163700» округлиться  до «160000».  
Возвращаемый функцией ассоциативный массив содержит следующие поля:  
№ Параметр  Тип Описание  
1 COUNT  DOUBLE  Количество линий, образующих индикатор  
2 TIME DOUBLE  Точное время свечки  
3 LINES  DOUBLE  Коллекция линий,  в которой каждый элемент коллекции содержит 
ассоциативный массив (MAP)  
 
Каждый элемент коллекции линий содержит ассоциативный массив ( MAP) со следующими 
параметрами:  
№ Параметр  Тип Описание  
1 NAME  STRING  Название линии (из легенды)  
2 OPEN  DOUBLE  Цена от крытия  в интервале времени  
3 CLOSE  DOUBLE  Цена закрытия  в интервале времени  
4 HIGH  DOUBLE  Наибольшее значение цены  в интервале времени  
5 LOW DOUBLE  Наименьшее значение цены  в интервале времени  

 
 87 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  
6 VOLUME  DOUBLE  Суммарный объем сделок  в интервале  
 
Пример : 
slice = Get_Candle_Ex ( "all", 20070511, 170000)  
LineCount = Get_Value (slice, "COUNT")  
time = Get_Value (slice, "TIME")  
lines = Get_Value (slice, "LINES")  
FOR lineID FROM 0 TO LineCount -1  
line = Get_Collection_Item (lines, lineID)  
open = Get_Value (li ne,"OPEN")  
line_name = Get_Value (line, "NAME")  
volume = Get_Value (line, "VOLUME")  
END FOR 
 
8.21  Функции для работы  с заявками  
Функции предназначены для создания заявок  и отправки  их в торговую систему.  
8.21.1  SEND_TRANSACTION  
Отправляет заявку  с параметрами, указан ными  в массиве «trans_params»  и ожидает ответа 
торговой системы  в течение «wait_timeout_for_replay» (в секундах,  не менее 5). Элементы 
массива «trans_params» заполняются  по правилам создания строки для импорта транзакций  
из файла (подробнее см. п.6. 11 Разд ела 6 «Совместная работа с другими приложениями» ). 
MAP SEND_TRANSACTION (DOUBLE wait_timeout_for_replay, MAP trans_params)  
Транзакции, выполняющие групповое снятие заявок,  не поддерживаются:  
• «KILL_ALL_ORDERS» – снять все заявки  из торговой системы,  
• «KILL_A LL_STOP_ORDERS» – снять  все стоп-заявки , 
• «KILL_ALL_NEG_DEALS» – снять все заявки на внебиржевые сделки  и заявки на сделки 
РЕПО.  
Функция возвращает ассоциативный массив (MAP), содержащий результат обработки 
заявки:  

 
 88 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  
1 RESULT  DOUBLE  Результат выполнени я операции. Возможные значения:  
«1» – выполнено успешно, «0» – произошла ошибка  
2 RESULT_EX  STRING  Расширенная диагностика выполнения операции. Может 
принимать значения, соответствующие полю «STATUS»  
в «.tro» -файле при импорте тра нзакций  (см. п. 6.1 1.4 
Раздела 6 «Совместная работа с другими приложениями» ) 
3 ORDER_NUMBER  DOUBLE  Регистрационный номер заявки  в торговой системе  
4 DESCRIPTION  STRING  Текстовый комментарий  с ответом сервера QUIK или 
торговой сист емы 
 
Пример : 
‘ 
new_global("tra ns_params", "")  
new_global("trans_result", "")  
trans_params = CREATE_MAP ()  
trans_params = set_value (trans_params, "TRANS_ID", "333")  
trans_params = set_value (trans_params, "ACTION", "NEW_ORDER")  
trans_params = set_value (trans_params, "CLASSCODE", " TQBR") 
trans_params = set_value (trans_params, "SECCODE", " HYDR") 
trans_params = set_value (trans_params, "ACCOUNT", "L01 -00000F00")  
trans_params = set_value (trans_params, "OPERATION", "B")  
trans_params = set_value (trans_params, "PRICE", "7.561")  
trans_param s = set_value (trans_params, "QUANTITY", "1")  
trans_params = set_value (trans_params, "CLIENT_CODE", "")  
trans_params = set_value (trans_params, "TYPE", "L")  
trans_result = SEND_TRANSACTION (30, trans_params)  
WRITELN ("qpile_trans.log", get_value (curr_dat etime, "DATETIME") & ": " & "Result: " 
& get_value (trans_result, "RESULT") & ", Result_ex: " & get_value (trans_result, 
"RESULT_EX") & ", OrderNum: " & get_value (trans_result, "O RDER_NUMBER") & ", 
Description: " & get_value (trans_result, "DESCRIPTION"))  
‘ 
 

 
 89 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.22  Функции для работы  с метками  
Функции предназначены для построения меток  и установки  их на график.  
8.22.1  ADD_LABEL  
Добавляет метку  с заданными параметрами.  
DOUBLE  ADD_LABEL (STRING tag, MAP label params)  
В окно, где отображен график  с идентификатором «tag» добавляется ме тка. В случае 
успешного добавления  функция возвращает идентификатор метки или ( -1), если д обавить 
метку  не удалось.  
Формат массива MAP содержит следующие параметры метки:  
№ Параметр  Тип Описание  
1 TEXT STRING  Подпись метки (если подпись  не требуется, то пустая 
строка)  
2 IMAGE_PATH  STRING  Путь к картинке, которая будет отображаться  в качестве 
метки (пустая стр ока, если картинка  не требуется)  
3 ALIGNMENT  STRING  Расположение картинки относительно текста  (возможно 4 
вариа нта: LEFT, RIGHT, TOP, BO TTOM)  
4 YVALUE  DOUBLE  Значение параметра на оси Y, к которому будет привязана 
метка  
5 DATE  DOUBLE  Дата в формате «ГГГГММДД» , к которой привязана метка  
6 TIME DOUBLE  Время  в формате «ЧЧММСС» , к которому будет привязана 
метка  
7 R DOUBLE  Красная компонент а цвета  в формате RGB. Число  
в интервале [0;255]  
8 G DOUBLE  Зеленая компонента цвета  в формате RGB. Число  
в интервале [0;255]  
9 B DOUBLE  Синяя компонента цвета  в формате RGB. Число  
в интервале [0;255]  
10 TRANSPARENCY  DOUBLE  Прозрачность метки  в процента х. Значение должно быть  
в промежутке [0;  100] 
11 TRANSPARENT_BACKGROUND  DOUBLE  Прозрачность метки. Возможные значения: «0»  – 
прозрачность отключена, «1»  – прозрачность включена  
12 FONT_FACE_NAME  STRING  Название шрифта (например «Arial»)  
13 FONT_HEIGHT  DOUBLE  Размер шрифта  

 
 90 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 № Параметр  Тип Описание  
14 HINT STRING  Текст всплывающей подсказки  
 
Пример : 
‘ 
label_params=create_map()  
label_params=set_value(label_params,"TEXT", " Текст метки") 
label_params=set_value(label_params,"IMAGE_PATH", "image.bmp")  
label_params=set_value(label_par ams,"ALIGNMENT", "LEFT")  
label_params=set_value(label_params,"YVALUE", 2000)  
label_params=set_value(label_params,"DATE", 20080616)  
label_params=set_value(label_params,"TIME", 220000)  
label_params=set_value(label_params,"R", 0)  
label_params=set_value(label_ params,"G", 0)  
label_params=set_value(label_params,"B", 200)  
label_params=set_value(label_params,"TRANSPARENCY", 10)  
label_params=set_value(label_params,"FONT_FACE_NAME", "Tahoma")  
label_params=set_value(label_params,"FONT_HEIGHT", 12)  
label_params=set_val ue(label_params,"HINT", " Подсказка ") 
id=ADD_LABEL("ALL", label_params)  
’ 
 
Результат представляется следующим образом:  на графике  с идентификатором "ALL" будет 
добавлена метка  с параметрами, указанными  в массиве label_params.  
8.22.2  DELETE _LABEL  
Удаляет метку  с заданными параметрами.  
DOUBLE  DELETE _LABEL(STRING tag, DOUBLE id)  
Удаляет метку  с графика  с текстовым идентификатором «tag»  по заданному идентификатору 
id. В случае  успешного удаления возвращает 1,  в случае неудачи  0. 
Пример:  
‘ 
err=DELETE_LABEL("ALL", id) 
’ 
Результат  действи я функции будет удаление метки на графике  с идентификатором «ALL» . 

 
 91 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.22.3  DELETE _ALL_LABELS  
Команда удаляет все мет ки на диаграмме  с указанным граф иком. 
DOUBL E DELETE_ ALL_LABELS(STRING tag)  
Удаляет все нанесенные метки  с диаграммы, содержащей гра фик с идентификатором tag. 
Если на этой диаграмме отображаются графики  с разными идентифи каторами, то этой 
командой б удут удалены метки  со всех графиков,  а не только  с указанного графика.  
Пример : 
‘ 
err=DELETE_ALL_LABELS("ALL")  
’ 
 
Результатом действия функц ии будет удаление всех меток на графике.  
8.22.4  GET_LABEL _PARAMS  
Команда позволяет получить параметры меток.  
MAP GET_LABEL _PARAMS(STRING tag,  DOUBLE id)  
Возвращает параметры метки  с указанным идентификатором; если метка  с указанным 
идент ификатором  не существует – возвращается пустой MAP.  
• «tag» – идентификатор любого индикатора на графике,  в котором расположена метка,  
• «id» – индекс или порядковый номер метки. Начинается  с единицы.  
Пример:  
‘ 
new_params=GET_LABEL_PARAMS("ALL", id)  
’ 
 
Результатом действия является по лучение данных метки . Если такой метки  не существует , 
то возврат ившиеся значения будут пустыми.  
8.22.5  SET_LABEL _PARAMS  
Функция задает  параметры для метки  с указанным иденти фикатором.  
DOUBLE  SET_LABEL _PARAMS(STRING tag, DOUBLE id, MAP new label params)  

 
 92 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 Она позвол яет задать  новые параметры для метки . В случае успешного обновления 
параме тров функция возвращает 1,  в случае неудачи  0. 
Пример : 
‘ 
err=SET_LABEL_PARAMS("ALL", id, label_params)  
’ 
 
Результатом действия функции будет изме нение существующих параметров на зада нные 
функцией.  
8.23  Сервисные функции  
8.23.1  GET_TRADE _DATE  
Возвращае т дату текущей торговой сессии.  
MAP GET_TRADE_DATE ()  
Функция возвращает ассоциативный массив (MAP), содержащий параметры:  
№ Параметр  Тип Описание  
1 DATE  STRING  Торговая дата  в виде строки « ДД.ММ.ГГ ГГ» 
2 YEAR DOUBLE  Год 
3 MONTH  DOUBLE  Месяц  
4 DAY DOUBLE  День 
 
Пример : 
‘ 
writeln(log_file_name, get_value(GET_TRADE_DATE(), "Date"))  
’ 
Записывает  в файл строку вида:  
02.06.2004 
 

 
 93 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.23.2  GET_DATETIME  
Возвращает текущие дату  и время.  
MAP GET_DATETIME ()  
Функция в озвращает ассоциативный массив (MAP), содержащий параметры:  
№ Параметр  Тип Описание  
1 DATETIME  STRING  Торговая дата  в виде строки « ДД.ММ.ГГГГ  ЧЧ:ММ:СС.ссс », где « ссс» – 
миллисекунды  
2 YEAR DOUBLE  Год 
3 MONTH  DOUBLE  Месяц  
4 DAY DOUBLE  День 
5 DAYOFWEEK  DOUBLE  Порядковый номер дня недели (воскресенье – 0, понедельник — 1, 
вторник – 2, среда – 3, четверг – 4, пятница -5, суббота – 6) 
6 HOUR  DOUBLE  Час 
7 MIN DOUBLE  Минута  
8 SEC DOUBLE  Секунда  
9 MILLISEC  DOUBLE  Миллисекунда  
 
Пример : 
‘ 
writeln(log_file_n ame, get_value(GET_DATETIME(), "Datetime"))  
’ 
 
Записывает  в файл строку вида:  
02.06.2004 16:57:34.460  
8.23.3  APPLY_SCALE  
Возвращает строку  с числом, полученным округлением числа «without_scale»  до разрядности 
«scale».  
STRING   APPLY_SCALE (DOUBLE without_scale, DO UBLE scale)  

 
 94 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 8.23.4  IS_CONNECTED  
Функция предназначена для определения состояния подключения клиентского места к 
серверу. Возвращает 1, если клиентское место подключено  и 0, если  не подключено.  
IS_CONNECTED ()  
8.23.5  GET_INFO_PARAM  
Функция возвращает значения параметров информационного окна (пункт меню 
Система /О программе /Информационное  окно …). 
STRING   GET_INFO_PARAM  (STRING  param _name ) 
Параметр «param_name» может принимать значения, представленные  в таблице.  
Значение 
параметра  Описание  
VERSION  Версия программы  
TRADEDA TE Дата торгов  
SERVERTIME  Время сервера  
LASTRECORDTIME  Время последней зап иси 
NUMRECORDS  Число записей  
LASTRECORD  Последняя запись  
LATERECORD  Отставшая запись  
CONNECTION  Соединение  
IPADDRESS  IP-адрес сервера  
IPPORT  Порт сервера  
IPCOMMENT  Описание соединения  
SERVER  Описание сервера  
SESSIONID  Идентификатор сессии  
USER  Пользователь  
USERID  ID пользователя  
ORG Организация  
MEMORY  Занято памяти  
LOCALTIME  Текущее время  Значение 
параметра  Описание  
CONNECTIONTIME  Время на связи  
MESSAGESSENT  Передано сообщений  
ALLSENT  Передано  всего байт  
BYTESSENT  Передано полезных байт  
BYTESPERSECSENT  Передано за секунду  
MESSAGESRECV  Принято сообщений  
BYTESRECV  Принято полезных байт  
ALLRECV  Принято всего байт  
BYTESPERSECRECV  Принято за секунду  
AVGSENT  Средняя скорость 
передачи  
AVGRECV  Средняя скорость 
приема 
LASTPINGTIME  Время последней 
проверки связи  
LASTPINGDURATION  Задержка данных при 
обмене  с сервером  
AVGPINGDURATION  Средняя задержка 
данных 
MAXPINGTIME  Время максимальной 
задержки  

 
 95 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 MAXPINGDURATION  Максимальная задержка 
данных  
 
8.23.6  BREAKPOINT  
Функция предназначена для прерывания режима расчета  и вывода окна «Отладка»,  
в котором пользователь сможет наблюдать за дальнейшей работой программы.  
BREAKPOINT  () 
Команда  не содержит никаких параметров  и результатом ее действия является останов ка 
выполнения программы, выделение кра сным маркером следующей  за ней функции  и вызов 
окна «Отладка»,  в котором пользователь сможет отслеживать выполн ение кода скрипта. При  
необходимости, команда может  содержаться  в коде произвольное количество раз.  
8.24  Отладка  программ QPILE  
Окно «Отладка» предназначено для пошагового контроля за исполнением кода скриптов. 
Оно позволяет  отслеживать выполнение кода программ, написанных на языке QPILE.  
Окно может быть вызвано следующим образом:  
• из таблицы  QPILE, выбрав команду ко нтекстного меню «Начать расчет  в режиме 
отладки »; 
• из кода программы функцией  breakpoint().  
Окно содержит два больших поля:  
• «Код программы » – выводит код язык а QPILE;  
• «Значения переменных » – выводятся переменные  и их значения  в виде двух столбцов.  
При в ызове окна  с помощью оператора breakpoint()  следующая за ним  строка программы  
будет отмечен а красным цветом.  

 
 96 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 
 
Окно «Отладка» содержит следующие кнопки:  
• «Следующий шаг » – выполняет один оператор  в коде.  
• «Продолжить выполнение » – продолжает выпол нение программы , пока  не будет нажата 
кнопка «Остановить расчет », найден еще один оператор breakpoint()  или не будет 
достигнут конец программы . 
• «Остановить расчет » – останавливает расчет на последнем выполненном операторе.  
Доступные функции : 
• «F5» – продолж ить выполнение программы;  
• «Shift»+«F5» – прекратить отладку программы  и закрыть данное окно ; 
• «F10» – перейти к следующей строке.  

 
 97 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 ПРИЛОЖЕНИЕ  1. Синтаксис команд языка QPILE  
Program: 
 Statement_List  
 
Statement_List:  
 Statement "\n" 
 Statement_List "\n" Statement  
 
Statement : 
 NAME=Expression  
 IFOperator  
 FOROperator  
 FUNCDescr  
 CONTINUE  //пропускает  выполнение  операторов  до конца текущего  Statement_List  
 BREAK //начинает выполнение оператора следующего за тек ущим Statement_List  
 RETURN //выход из текущего управляющего блока – из тела функции или  из всей программы  
 
IFOperator:  
"IF" Condition "\n" 
 Statement_List  
"ELSE" "\n" 
 Statement_List  
"END IF" 
  
Condition  
 Condition "OR" Condition  
 Condition "AND" Condition  
 "("Condition ") " 
 PrimaryCondition  
 
PrimaryCondition  
 Expression  "==" Expression  
 Expression "=" Expression  //c той же семантикой , что и "==" 
 Expression ">=" Expression  
 Expression "<=" Expression  
 Expression ">"Expression  
 Expression "<"Expression  
 Expression "!=" Expression  
 Expression  "<>" Expression  //c той же семантикой, что и "!=" 
 
FOROperator:  
 "FOR" NAME "IN" ArgList "\n" 
  Statement_List  
 "END FOR" 

 
 98 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  
 "FOR" NAME "FROM" Expression "TO" Expression "\n" 
  Statement_List  
 "END FOR" 
  
ArgList 
NAME // в этом случае переменная  с именем NAME должна содержать значение в ида 
ArgList1  
 ArgList1  
 
ArgList1:  
 Expression  
ArgList "," Expression  
 
FUNCDescr  
 "FUNC" NAME "(" FargList ")" "\n" 
 Statement_List  
 "END FUNC " 
 
FArgList  
NAME 
FArgList "," NAME 
 
Expression:  
 Expression "+" Term 
 Expression "–" Term 
 Expression "&" Term //конкатенация  строк 
 Term 
 
Term: 
 Term "/" Primary 
 Term "*" Primary 
 Primary 
 
Primary:  
 NUMBER 
 STRINGNAME  //значение  переменной  с именем NAME 
 "-" Primary 
"(" Expression ")" 
FunctionCall  
 
FunctionCall  
FNAME "(" ArgList1 ")" 
 
NUMBER: 
 Digits 
 Digits "." DigitsSTRING:  //определяется  стандартно  

 
 99 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 NAME: //определяется  стандартно  
 
 
Ключевые слова = {IF, ELSE, FOR, IN, TO, FROM, AND, OR, RESULT, FUNC, END FUNC, END 
FOR, END IF, CONTINUE, BREAK, RETURN}  
 
ПРИЛОЖЕНИЕ  2. Рекомендации к составлению 
программ на QPILE  
1. Функции для работы  со структурными переменными, такие как «SET_VALUE», 
«ADD_COLLECTION_ITEM», «REMOVE_COLLECTION_ITEM» возвращают измененное 
значение коллекции или массива. Поскольку все параметры передаются  в функцию  
по значению, то  использование данных функц ий в качестве процедур приводит к по тере 
сделанных  в них изменений.  
Например : 
clientscol=INSERT_COLLECT ION_ITEM(clientscol,0,initmap)  
‘правильно  
 
INSERT_COLLEC TION_ITEM(clientscol,0,initmap)  
‘неправильно,  в этом случае после вызова функции clientscol будет  содержать то же 
значение, что  и до ее вызова  
 
2. Возвращаемые функциями значения могут оказаться строковыми, хотя  и представлять 
вещественное число . В этих случаях нужно использовать сложение  с «0» для 
преобразования результата к численному значению. Наприме р, для коррек тной 
инициализации переменной  в операторе присваивания вида «v=GET_VALUE()» стоит 
написать «v=0+GET_VALUE()» . В последнем случае гарантированно достигается 
вещественное значение переменной.  
Аналогичным образом, для приведения вещественного зна чения к строковому может 
использоваться операция склейки  с пустой строкой «v= ""&GET_VALUE()».  
3. Произвольные пользовательские типы могут быть сформированы путем комбинации 
коллекций  и ассоциативных масс ивов. Например, если нужен список структур типа:  
c=strruct{ 
openbal:double  
closebal:double  
clientcode:string}  
 

 
 100 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
 то его можно представить как коллекцию ассоциативных массивов , в каждом  из которых 
будет три ключа – «OPENBAL», «CLOSEBAL», «CLIENTCODE». Код для инициализации 
такой структуры:  
initmap=CREATE_MAP()  
initmap=SET_VALUE(initmap,"OPENBAL",0)  
initmap=SET_VALUE(initmap,"CLOSEBAL",0)  
initmap=SET_VALUE(initmap,"CLIENTCODE","")  
clientscol=CREATE_COLLECTION()  
FOR i FROM 0 TO 10  
 clientscol=INSERT_COLLECTION_ITEM(clientscol,0,initmap)  
END FOR 
 
После чего, для досту па к полю «OPENBAL» 5 -го клиента надо написать:  
openbal = GET_VALUE(GET_COLLECTION_ITEM(clientscol,5),"OPENBAL")  
 
Если вместо коллекции таких записей использовать массив  с ключом представляющим  
из себя код клиента, то можно будет обращаться к значениям стр уктуры клиента без  
указания его индекса  в массиве,  а зная только клиентский код:  
clientsmap=CREATE_MAP()  
FOR i FROM 0 TO 10  
 clientsmap=SET_VALUE(clientsmap,"Q" & i, initmap)  
END FOR 
 
и последующее обращение к значению поля «OPENBAL» для клиента  с кодом «Q 5»: 
openbal = GET_VALUE(GET_VALUE(clientsmap,"Q5"),"OPENBAL")  
 
4. «MODIFY_ITEM»  не выполняет действий, если указанной строки  в таблице «OWN» 
еще нет. Поэтому надо предварител ьно проверять ее наличие.  
При построении пользовательской таблицы на каждой итерации изменяющей  в себе 
строку полезным будет код:  
new_global("first_time_flag",0)  
 
if first_time_flag==0  
 add_item(1, SAMPLE)  
 first_time_flag=1  
else 

 
 101 
 
Руководство пользователя QUIK  
Раздел 8: Алгоритмический язык QPILE  
  modify_item(1, SAMPLE)  
end if 
 
При первом запуске создается строка номер 1  со значениями полей  из переменной 
«SAMPLE» насчитанной ранее,  а на последующих итерациях строка номер 1 
модиф ицируется.  

